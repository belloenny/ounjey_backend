### This file was autogenerated by Nexus 0.11.7
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

type AuthPayloadVendor {
  token: String
  vendor: Vendor
}

type Booking {
  bookee: User!
  createdAt: DateTime!
  id: ID!
  isFulfilled: Boolean
  listing: Listing!
  location: Location
  occasionDate: DateTime!
  payment: Payment
  updatedAt: DateTime!
}

scalar DateTime

type Listing {
  bookings: [Booking!]
  createdAt: DateTime!
  description: String!
  id: ID!
  maxGuests: Int!
  photos: [Picture!]
  pricePerPlate: Int!
  reviews: [Review!]
  title: String!
  updatedAt: DateTime!
  vendor: Vendor!
  views: Views
}

type ListingPhotos {
  listing: Listing
  photos: [Picture!]
}

type Location {
  directions: String!
  id: ID!
  lat: Float!
  lng: Float!
  user: User
}

type Mutation {
  book(listingId: ID!, occasionDate: String, price: Float, serviceFee: Float, totalPrice: Float, type: String): Order
  createlisting(description: String, maxGuests: Int, photo: [Upload!]!, pricePerPlate: Int, title: String): ListingPhotos
  createReview(comment: String, listingId: ID, stars: Int, title: String): Review
  deleteBooking(id: ID): Booking
  deleteReview(id: ID): Review
  loginuser(email: String, password: String): AuthPayload
  loginVendor(email: String, password: String): AuthPayloadVendor
  signupUser(email: String, firstName: String, lastName: String, password: String, phone: String): AuthPayload
  signupVendor(email: String, firstName: String, lastName: String, password: String, phone: String, vendorType: String): AuthPayloadVendor
  signupWithFaceBook(idToken: String, password: String): AuthPayload
  uploadProfilePhoto(photo: Upload!, userId: ID): User
}

type Order {
  booking: Booking
  payment: Payment
  paymentAccount: PaymentAccount
}

type Payment {
  booking: Booking!
  createdAt: DateTime!
  id: ID!
  paymentMethod: PaymentAccount!
  price: Float!
  serviceFee: Float!
  totalPrice: Float!
}

enum PAYMENT_PROVIDER {
  CREDIT_CARD
  MPESA
}

type PaymentAccount {
  createdAt: DateTime!
  id: ID!
  payments: [Payment!]
  type: PAYMENT_PROVIDER
  user: User!
}

type Picture {
  id: ID!
  listing: Listing!
  url: String!
}

type Query {
  bookings: [Booking!]
  listing(id: ID): Listing
  listings: [Listing!]
  location: [Location!]
  payment: [Payment!]
  photos: [Picture!]
  review: [Review!]
  savedlist: [savedList!]
  user: User
  users: [User!]
  vendor: Vendor
  vendors: [Vendor!]
}

type Review {
  comment: String!
  createdAt: DateTime!
  id: ID!
  listing: Listing!
  stars: Int!
  title: String!
}

type savedList {
  id: ID!
  listings: [Listing!]
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  address: Location
  createdAt: DateTime!
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  password: String!
  phone: String
  photoUrl: String
  saved: savedList
  updatedAt: DateTime!
}

type Vendor {
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  listings: [Listing!]
  phone: String!
  vendorType: VENDOR_TYPE
}

enum VENDOR_TYPE {
  BARS
  INDEPENDENT
  RESTAURANT
}

type Views {
  id: ID!
  lastWeek: Int!
  listing: Listing!
}
