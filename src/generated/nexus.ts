/**
 * This file was automatically generated by Nexus 0.11.7
 * Do not make changes to this file directly
 */

import * as types from "../types"
import { core } from "nexus"
declare global {
  interface NexusGenCustomDefinitionMethods<TypeName extends string> {
    upload<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Upload";
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
  PAYMENT_PROVIDER: "CREDIT_CARD" | "MPESA"
  VENDOR_TYPE: "BARS" | "INDEPENDENT" | "RESTAURANT"
}

export interface NexusGenRootTypes {
  AuthPayload: { // root type
    token?: string | null; // String
    user?: NexusGenRootTypes['User'] | null; // User
  }
  AuthPayloadVendor: { // root type
    token?: string | null; // String
    vendor?: NexusGenRootTypes['Vendor'] | null; // Vendor
  }
  Booking: { // root type
    createdAt: any; // DateTime!
    id: string; // ID!
    isFulfilled?: boolean | null; // Boolean
    occasionDate: any; // DateTime!
    updatedAt: any; // DateTime!
  }
  Listing: { // root type
    createdAt: any; // DateTime!
    description: string; // String!
    id: string; // ID!
    maxGuests: number; // Int!
    pricePerPlate: number; // Int!
    title: string; // String!
    updatedAt: any; // DateTime!
  }
  ListingPhotos: { // root type
    listing?: NexusGenRootTypes['Listing'] | null; // Listing
    photos?: NexusGenRootTypes['Picture'][] | null; // [Picture!]
  }
  Location: { // root type
    directions: string; // String!
    id: string; // ID!
    lat: number; // Float!
    lng: number; // Float!
  }
  Mutation: {};
  Order: { // root type
    booking?: NexusGenRootTypes['Booking'] | null; // Booking
    payment?: NexusGenRootTypes['Payment'] | null; // Payment
    paymentAccount?: NexusGenRootTypes['PaymentAccount'] | null; // PaymentAccount
  }
  Payment: { // root type
    createdAt: any; // DateTime!
    id: string; // ID!
    price: number; // Float!
    serviceFee: number; // Float!
    totalPrice: number; // Float!
  }
  PaymentAccount: { // root type
    createdAt: any; // DateTime!
    id: string; // ID!
    type?: NexusGenEnums['PAYMENT_PROVIDER'] | null; // PAYMENT_PROVIDER
  }
  Picture: { // root type
    id: string; // ID!
    src: string; // String!
  }
  Query: {};
  Review: { // root type
    comment: string; // String!
    createdAt: any; // DateTime!
    id: string; // ID!
    stars: number; // Int!
    title: string; // String!
  }
  User: { // root type
    createdAt: any; // DateTime!
    email: string; // String!
    firstName: string; // String!
    id: string; // ID!
    lastName: string; // String!
    password: string; // String!
    phone?: string | null; // String
    photoUrl?: string | null; // String
    updatedAt: any; // DateTime!
  }
  Vendor: { // root type
    email: string; // String!
    firstName: string; // String!
    id: string; // ID!
    lastName: string; // String!
    phone: string; // String!
    vendorType?: NexusGenEnums['VENDOR_TYPE'] | null; // VENDOR_TYPE
  }
  Views: { // root type
    id: string; // ID!
    lastWeek: number; // Int!
  }
  savedList: { // root type
    id: string; // ID!
  }
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
  Upload: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  PAYMENT_PROVIDER: NexusGenEnums['PAYMENT_PROVIDER'];
  VENDOR_TYPE: NexusGenEnums['VENDOR_TYPE'];
}

export interface NexusGenFieldTypes {
  AuthPayload: { // field return type
    token: string | null; // String
    user: NexusGenRootTypes['User'] | null; // User
  }
  AuthPayloadVendor: { // field return type
    token: string | null; // String
    vendor: NexusGenRootTypes['Vendor'] | null; // Vendor
  }
  Booking: { // field return type
    bookee: NexusGenRootTypes['User']; // User!
    createdAt: any; // DateTime!
    id: string; // ID!
    isFulfilled: boolean | null; // Boolean
    listing: NexusGenRootTypes['Listing']; // Listing!
    location: NexusGenRootTypes['Location'] | null; // Location
    occasionDate: any; // DateTime!
    payment: NexusGenRootTypes['Payment'] | null; // Payment
    updatedAt: any; // DateTime!
  }
  Listing: { // field return type
    bookings: NexusGenRootTypes['Booking'][] | null; // [Booking!]
    createdAt: any; // DateTime!
    description: string; // String!
    id: string; // ID!
    maxGuests: number; // Int!
    photos: NexusGenRootTypes['Picture'][] | null; // [Picture!]
    pricePerPlate: number; // Int!
    reviews: NexusGenRootTypes['Review'][] | null; // [Review!]
    title: string; // String!
    updatedAt: any; // DateTime!
    vendor: NexusGenRootTypes['Vendor']; // Vendor!
    views: NexusGenRootTypes['Views'] | null; // Views
  }
  ListingPhotos: { // field return type
    listing: NexusGenRootTypes['Listing'] | null; // Listing
    photos: NexusGenRootTypes['Picture'][] | null; // [Picture!]
  }
  Location: { // field return type
    directions: string; // String!
    id: string; // ID!
    lat: number; // Float!
    lng: number; // Float!
    user: NexusGenRootTypes['User'] | null; // User
  }
  Mutation: { // field return type
    book: NexusGenRootTypes['Order'] | null; // Order
    createlisting: NexusGenRootTypes['Listing'] | null; // Listing
    createReview: NexusGenRootTypes['Review'] | null; // Review
    loginOrSignUpFacebook: NexusGenRootTypes['AuthPayload'] | null; // AuthPayload
    loginuser: NexusGenRootTypes['AuthPayload'] | null; // AuthPayload
    loginVendor: NexusGenRootTypes['AuthPayloadVendor'] | null; // AuthPayloadVendor
    signupUser: NexusGenRootTypes['AuthPayload'] | null; // AuthPayload
    signupVendor: NexusGenRootTypes['AuthPayloadVendor'] | null; // AuthPayloadVendor
    uploadPhotos: NexusGenRootTypes['Picture'][] | null; // [Picture!]
    uploadProfilePhoto: NexusGenRootTypes['User'] | null; // User
  }
  Order: { // field return type
    booking: NexusGenRootTypes['Booking'] | null; // Booking
    payment: NexusGenRootTypes['Payment'] | null; // Payment
    paymentAccount: NexusGenRootTypes['PaymentAccount'] | null; // PaymentAccount
  }
  Payment: { // field return type
    booking: NexusGenRootTypes['Booking']; // Booking!
    createdAt: any; // DateTime!
    id: string; // ID!
    paymentMethod: NexusGenRootTypes['PaymentAccount']; // PaymentAccount!
    price: number; // Float!
    serviceFee: number; // Float!
    totalPrice: number; // Float!
  }
  PaymentAccount: { // field return type
    createdAt: any; // DateTime!
    id: string; // ID!
    payments: NexusGenRootTypes['Payment'][] | null; // [Payment!]
    type: NexusGenEnums['PAYMENT_PROVIDER'] | null; // PAYMENT_PROVIDER
    user: NexusGenRootTypes['User']; // User!
  }
  Picture: { // field return type
    id: string; // ID!
    listing: NexusGenRootTypes['Listing']; // Listing!
    src: string; // String!
  }
  Query: { // field return type
    listing: NexusGenRootTypes['Listing'] | null; // Listing
    listings: NexusGenRootTypes['Listing'][] | null; // [Listing!]
    user: NexusGenRootTypes['User'] | null; // User
    users: NexusGenRootTypes['User'][] | null; // [User!]
    vendor: NexusGenRootTypes['Vendor'] | null; // Vendor
    vendors: NexusGenRootTypes['Vendor'][] | null; // [Vendor!]
  }
  Review: { // field return type
    comment: string; // String!
    createdAt: any; // DateTime!
    id: string; // ID!
    listing: NexusGenRootTypes['Listing']; // Listing!
    stars: number; // Int!
    title: string; // String!
  }
  User: { // field return type
    address: NexusGenRootTypes['Location'] | null; // Location
    createdAt: any; // DateTime!
    email: string; // String!
    firstName: string; // String!
    id: string; // ID!
    lastName: string; // String!
    password: string; // String!
    phone: string | null; // String
    photoUrl: string | null; // String
    saved: NexusGenRootTypes['savedList'] | null; // savedList
    updatedAt: any; // DateTime!
  }
  Vendor: { // field return type
    email: string; // String!
    firstName: string; // String!
    id: string; // ID!
    lastName: string; // String!
    listings: NexusGenRootTypes['Listing'][] | null; // [Listing!]
    phone: string; // String!
    vendorType: NexusGenEnums['VENDOR_TYPE'] | null; // VENDOR_TYPE
  }
  Views: { // field return type
    id: string; // ID!
    lastWeek: number; // Int!
    listing: NexusGenRootTypes['Listing']; // Listing!
  }
  savedList: { // field return type
    id: string; // ID!
    listings: NexusGenRootTypes['Listing'][] | null; // [Listing!]
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    book: { // args
      listingId: string; // ID!
      occasionDate?: string | null; // String
      price?: number | null; // Float
      serviceFee?: number | null; // Float
      totalPrice?: number | null; // Float
      type: NexusGenEnums['PAYMENT_PROVIDER']; // PAYMENT_PROVIDER!
    }
    createlisting: { // args
      coverPhoto: any; // Upload!
      description?: string | null; // String
      maxGuests?: number | null; // Int
      pricePerPlate?: number | null; // Int
      title?: string | null; // String
      vendorID?: string | null; // ID
    }
    createReview: { // args
      comment?: string | null; // String
      listingId?: string | null; // ID
      stars?: number | null; // Int
      title?: string | null; // String
    }
    loginOrSignUpFacebook: { // args
      idToken?: string | null; // String
      password?: string | null; // String
    }
    loginuser: { // args
      email?: string | null; // String
      password?: string | null; // String
    }
    loginVendor: { // args
      email?: string | null; // String
      password?: string | null; // String
    }
    signupUser: { // args
      email?: string | null; // String
      firstName?: string | null; // String
      lastName?: string | null; // String
      password?: string | null; // String
      phone?: string | null; // String
    }
    signupVendor: { // args
      email?: string | null; // String
      firstName?: string | null; // String
      lastName?: string | null; // String
      password?: string | null; // String
      phone?: string | null; // String
      vendorType: NexusGenEnums['VENDOR_TYPE']; // VENDOR_TYPE!
    }
    uploadPhotos: { // args
      listing?: string | null; // ID
      photos: any[]; // [Upload!]!
    }
    uploadProfilePhoto: { // args
      photo: any; // Upload!
      userId?: string | null; // ID
    }
  }
  Query: {
    listing: { // args
      id?: string | null; // ID
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "AuthPayload" | "AuthPayloadVendor" | "Booking" | "Listing" | "ListingPhotos" | "Location" | "Mutation" | "Order" | "Payment" | "PaymentAccount" | "Picture" | "Query" | "Review" | "User" | "Vendor" | "Views" | "savedList";

export type NexusGenInputNames = never;

export type NexusGenEnumNames = "PAYMENT_PROVIDER" | "VENDOR_TYPE";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String" | "Upload";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: types.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}