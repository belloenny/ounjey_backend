/**
 * This file was automatically generated by nexus-prisma@0.3.7
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../prisma-client'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      Vendor: VendorObject
      Listing: ListingObject
      Review: ReviewObject
      Views: ViewsObject
      Booking: BookingObject
      User: UserObject
      Location: LocationObject
      savedList: savedListObject
      Payment: PaymentObject
      PaymentAccount: PaymentAccountObject
      Picture: PictureObject
      VendorConnection: VendorConnectionObject
      PageInfo: PageInfoObject
      VendorEdge: VendorEdgeObject
      AggregateVendor: AggregateVendorObject
      UserConnection: UserConnectionObject
      UserEdge: UserEdgeObject
      AggregateUser: AggregateUserObject
      LocationConnection: LocationConnectionObject
      LocationEdge: LocationEdgeObject
      AggregateLocation: AggregateLocationObject
      ListingConnection: ListingConnectionObject
      ListingEdge: ListingEdgeObject
      AggregateListing: AggregateListingObject
      PictureConnection: PictureConnectionObject
      PictureEdge: PictureEdgeObject
      AggregatePicture: AggregatePictureObject
      ViewsConnection: ViewsConnectionObject
      ViewsEdge: ViewsEdgeObject
      AggregateViews: AggregateViewsObject
      ReviewConnection: ReviewConnectionObject
      ReviewEdge: ReviewEdgeObject
      AggregateReview: AggregateReviewObject
      BookingConnection: BookingConnectionObject
      BookingEdge: BookingEdgeObject
      AggregateBooking: AggregateBookingObject
      PaymentConnection: PaymentConnectionObject
      PaymentEdge: PaymentEdgeObject
      AggregatePayment: AggregatePaymentObject
      PaymentAccountConnection: PaymentAccountConnectionObject
      PaymentAccountEdge: PaymentAccountEdgeObject
      AggregatePaymentAccount: AggregatePaymentAccountObject
      savedListConnection: savedListConnectionObject
      savedListEdge: savedListEdgeObject
      AggregatesavedList: AggregatesavedListObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      VendorSubscriptionPayload: VendorSubscriptionPayloadObject
      VendorPreviousValues: VendorPreviousValuesObject
      UserSubscriptionPayload: UserSubscriptionPayloadObject
      UserPreviousValues: UserPreviousValuesObject
      LocationSubscriptionPayload: LocationSubscriptionPayloadObject
      LocationPreviousValues: LocationPreviousValuesObject
      ListingSubscriptionPayload: ListingSubscriptionPayloadObject
      ListingPreviousValues: ListingPreviousValuesObject
      PictureSubscriptionPayload: PictureSubscriptionPayloadObject
      PicturePreviousValues: PicturePreviousValuesObject
      ViewsSubscriptionPayload: ViewsSubscriptionPayloadObject
      ViewsPreviousValues: ViewsPreviousValuesObject
      ReviewSubscriptionPayload: ReviewSubscriptionPayloadObject
      ReviewPreviousValues: ReviewPreviousValuesObject
      BookingSubscriptionPayload: BookingSubscriptionPayloadObject
      BookingPreviousValues: BookingPreviousValuesObject
      PaymentSubscriptionPayload: PaymentSubscriptionPayloadObject
      PaymentPreviousValues: PaymentPreviousValuesObject
      PaymentAccountSubscriptionPayload: PaymentAccountSubscriptionPayloadObject
      PaymentAccountPreviousValues: PaymentAccountPreviousValuesObject
      savedListSubscriptionPayload: savedListSubscriptionPayloadObject
      savedListPreviousValues: savedListPreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      Vendor: VendorFieldDetails
      Listing: ListingFieldDetails
      Review: ReviewFieldDetails
      Views: ViewsFieldDetails
      Booking: BookingFieldDetails
      User: UserFieldDetails
      Location: LocationFieldDetails
      savedList: savedListFieldDetails
      Payment: PaymentFieldDetails
      PaymentAccount: PaymentAccountFieldDetails
      Picture: PictureFieldDetails
      VendorConnection: VendorConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      VendorEdge: VendorEdgeFieldDetails
      AggregateVendor: AggregateVendorFieldDetails
      UserConnection: UserConnectionFieldDetails
      UserEdge: UserEdgeFieldDetails
      AggregateUser: AggregateUserFieldDetails
      LocationConnection: LocationConnectionFieldDetails
      LocationEdge: LocationEdgeFieldDetails
      AggregateLocation: AggregateLocationFieldDetails
      ListingConnection: ListingConnectionFieldDetails
      ListingEdge: ListingEdgeFieldDetails
      AggregateListing: AggregateListingFieldDetails
      PictureConnection: PictureConnectionFieldDetails
      PictureEdge: PictureEdgeFieldDetails
      AggregatePicture: AggregatePictureFieldDetails
      ViewsConnection: ViewsConnectionFieldDetails
      ViewsEdge: ViewsEdgeFieldDetails
      AggregateViews: AggregateViewsFieldDetails
      ReviewConnection: ReviewConnectionFieldDetails
      ReviewEdge: ReviewEdgeFieldDetails
      AggregateReview: AggregateReviewFieldDetails
      BookingConnection: BookingConnectionFieldDetails
      BookingEdge: BookingEdgeFieldDetails
      AggregateBooking: AggregateBookingFieldDetails
      PaymentConnection: PaymentConnectionFieldDetails
      PaymentEdge: PaymentEdgeFieldDetails
      AggregatePayment: AggregatePaymentFieldDetails
      PaymentAccountConnection: PaymentAccountConnectionFieldDetails
      PaymentAccountEdge: PaymentAccountEdgeFieldDetails
      AggregatePaymentAccount: AggregatePaymentAccountFieldDetails
      savedListConnection: savedListConnectionFieldDetails
      savedListEdge: savedListEdgeFieldDetails
      AggregatesavedList: AggregatesavedListFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      VendorSubscriptionPayload: VendorSubscriptionPayloadFieldDetails
      VendorPreviousValues: VendorPreviousValuesFieldDetails
      UserSubscriptionPayload: UserSubscriptionPayloadFieldDetails
      UserPreviousValues: UserPreviousValuesFieldDetails
      LocationSubscriptionPayload: LocationSubscriptionPayloadFieldDetails
      LocationPreviousValues: LocationPreviousValuesFieldDetails
      ListingSubscriptionPayload: ListingSubscriptionPayloadFieldDetails
      ListingPreviousValues: ListingPreviousValuesFieldDetails
      PictureSubscriptionPayload: PictureSubscriptionPayloadFieldDetails
      PicturePreviousValues: PicturePreviousValuesFieldDetails
      ViewsSubscriptionPayload: ViewsSubscriptionPayloadFieldDetails
      ViewsPreviousValues: ViewsPreviousValuesFieldDetails
      ReviewSubscriptionPayload: ReviewSubscriptionPayloadFieldDetails
      ReviewPreviousValues: ReviewPreviousValuesFieldDetails
      BookingSubscriptionPayload: BookingSubscriptionPayloadFieldDetails
      BookingPreviousValues: BookingPreviousValuesFieldDetails
      PaymentSubscriptionPayload: PaymentSubscriptionPayloadFieldDetails
      PaymentPreviousValues: PaymentPreviousValuesFieldDetails
      PaymentAccountSubscriptionPayload: PaymentAccountSubscriptionPayloadFieldDetails
      PaymentAccountPreviousValues: PaymentAccountPreviousValuesFieldDetails
      savedListSubscriptionPayload: savedListSubscriptionPayloadFieldDetails
      savedListPreviousValues: savedListPreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      VendorWhereUniqueInput: VendorWhereUniqueInputInputObject
      ListingWhereInput: ListingWhereInputInputObject
      ReviewWhereInput: ReviewWhereInputInputObject
      VendorWhereInput: VendorWhereInputInputObject
      ViewsWhereInput: ViewsWhereInputInputObject
      BookingWhereInput: BookingWhereInputInputObject
      UserWhereInput: UserWhereInputInputObject
      LocationWhereInput: LocationWhereInputInputObject
      savedListWhereInput: savedListWhereInputInputObject
      PaymentWhereInput: PaymentWhereInputInputObject
      PaymentAccountWhereInput: PaymentAccountWhereInputInputObject
      PictureWhereInput: PictureWhereInputInputObject
      UserWhereUniqueInput: UserWhereUniqueInputInputObject
      LocationWhereUniqueInput: LocationWhereUniqueInputInputObject
      ListingWhereUniqueInput: ListingWhereUniqueInputInputObject
      PictureWhereUniqueInput: PictureWhereUniqueInputInputObject
      ViewsWhereUniqueInput: ViewsWhereUniqueInputInputObject
      ReviewWhereUniqueInput: ReviewWhereUniqueInputInputObject
      BookingWhereUniqueInput: BookingWhereUniqueInputInputObject
      PaymentWhereUniqueInput: PaymentWhereUniqueInputInputObject
      PaymentAccountWhereUniqueInput: PaymentAccountWhereUniqueInputInputObject
      savedListWhereUniqueInput: savedListWhereUniqueInputInputObject
      VendorCreateInput: VendorCreateInputInputObject
      ListingCreateManyWithoutVendorInput: ListingCreateManyWithoutVendorInputInputObject
      ListingCreateWithoutVendorInput: ListingCreateWithoutVendorInputInputObject
      ReviewCreateManyWithoutListingInput: ReviewCreateManyWithoutListingInputInputObject
      ReviewCreateWithoutListingInput: ReviewCreateWithoutListingInputInputObject
      ViewsCreateOneWithoutListingInput: ViewsCreateOneWithoutListingInputInputObject
      ViewsCreateWithoutListingInput: ViewsCreateWithoutListingInputInputObject
      BookingCreateManyWithoutListingInput: BookingCreateManyWithoutListingInputInputObject
      BookingCreateWithoutListingInput: BookingCreateWithoutListingInputInputObject
      UserCreateOneInput: UserCreateOneInputInputObject
      UserCreateInput: UserCreateInputInputObject
      LocationCreateOneWithoutUserInput: LocationCreateOneWithoutUserInputInputObject
      LocationCreateWithoutUserInput: LocationCreateWithoutUserInputInputObject
      savedListCreateOneInput: savedListCreateOneInputInputObject
      savedListCreateInput: savedListCreateInputInputObject
      ListingCreateManyInput: ListingCreateManyInputInputObject
      ListingCreateInput: ListingCreateInputInputObject
      VendorCreateOneWithoutListingsInput: VendorCreateOneWithoutListingsInputInputObject
      VendorCreateWithoutListingsInput: VendorCreateWithoutListingsInputInputObject
      PictureCreateManyWithoutListingInput: PictureCreateManyWithoutListingInputInputObject
      PictureCreateWithoutListingInput: PictureCreateWithoutListingInputInputObject
      LocationCreateOneInput: LocationCreateOneInputInputObject
      LocationCreateInput: LocationCreateInputInputObject
      UserCreateOneWithoutAddressInput: UserCreateOneWithoutAddressInputInputObject
      UserCreateWithoutAddressInput: UserCreateWithoutAddressInputInputObject
      PaymentCreateOneWithoutBookingInput: PaymentCreateOneWithoutBookingInputInputObject
      PaymentCreateWithoutBookingInput: PaymentCreateWithoutBookingInputInputObject
      PaymentAccountCreateOneWithoutPaymentsInput: PaymentAccountCreateOneWithoutPaymentsInputInputObject
      PaymentAccountCreateWithoutPaymentsInput: PaymentAccountCreateWithoutPaymentsInputInputObject
      VendorUpdateInput: VendorUpdateInputInputObject
      ListingUpdateManyWithoutVendorInput: ListingUpdateManyWithoutVendorInputInputObject
      ListingUpdateWithWhereUniqueWithoutVendorInput: ListingUpdateWithWhereUniqueWithoutVendorInputInputObject
      ListingUpdateWithoutVendorDataInput: ListingUpdateWithoutVendorDataInputInputObject
      ReviewUpdateManyWithoutListingInput: ReviewUpdateManyWithoutListingInputInputObject
      ReviewUpdateWithWhereUniqueWithoutListingInput: ReviewUpdateWithWhereUniqueWithoutListingInputInputObject
      ReviewUpdateWithoutListingDataInput: ReviewUpdateWithoutListingDataInputInputObject
      ReviewUpsertWithWhereUniqueWithoutListingInput: ReviewUpsertWithWhereUniqueWithoutListingInputInputObject
      ReviewScalarWhereInput: ReviewScalarWhereInputInputObject
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInputInputObject
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInputInputObject
      ViewsUpdateOneWithoutListingInput: ViewsUpdateOneWithoutListingInputInputObject
      ViewsUpdateWithoutListingDataInput: ViewsUpdateWithoutListingDataInputInputObject
      ViewsUpsertWithoutListingInput: ViewsUpsertWithoutListingInputInputObject
      BookingUpdateManyWithoutListingInput: BookingUpdateManyWithoutListingInputInputObject
      BookingUpdateWithWhereUniqueWithoutListingInput: BookingUpdateWithWhereUniqueWithoutListingInputInputObject
      BookingUpdateWithoutListingDataInput: BookingUpdateWithoutListingDataInputInputObject
      UserUpdateOneRequiredInput: UserUpdateOneRequiredInputInputObject
      UserUpdateDataInput: UserUpdateDataInputInputObject
      LocationUpdateOneWithoutUserInput: LocationUpdateOneWithoutUserInputInputObject
      LocationUpdateWithoutUserDataInput: LocationUpdateWithoutUserDataInputInputObject
      LocationUpsertWithoutUserInput: LocationUpsertWithoutUserInputInputObject
      savedListUpdateOneInput: savedListUpdateOneInputInputObject
      savedListUpdateDataInput: savedListUpdateDataInputInputObject
      ListingUpdateManyInput: ListingUpdateManyInputInputObject
      ListingUpdateWithWhereUniqueNestedInput: ListingUpdateWithWhereUniqueNestedInputInputObject
      ListingUpdateDataInput: ListingUpdateDataInputInputObject
      VendorUpdateOneRequiredWithoutListingsInput: VendorUpdateOneRequiredWithoutListingsInputInputObject
      VendorUpdateWithoutListingsDataInput: VendorUpdateWithoutListingsDataInputInputObject
      VendorUpsertWithoutListingsInput: VendorUpsertWithoutListingsInputInputObject
      PictureUpdateManyWithoutListingInput: PictureUpdateManyWithoutListingInputInputObject
      PictureUpdateWithWhereUniqueWithoutListingInput: PictureUpdateWithWhereUniqueWithoutListingInputInputObject
      PictureUpdateWithoutListingDataInput: PictureUpdateWithoutListingDataInputInputObject
      PictureUpsertWithWhereUniqueWithoutListingInput: PictureUpsertWithWhereUniqueWithoutListingInputInputObject
      PictureScalarWhereInput: PictureScalarWhereInputInputObject
      PictureUpdateManyWithWhereNestedInput: PictureUpdateManyWithWhereNestedInputInputObject
      PictureUpdateManyDataInput: PictureUpdateManyDataInputInputObject
      ListingUpsertWithWhereUniqueNestedInput: ListingUpsertWithWhereUniqueNestedInputInputObject
      ListingScalarWhereInput: ListingScalarWhereInputInputObject
      ListingUpdateManyWithWhereNestedInput: ListingUpdateManyWithWhereNestedInputInputObject
      ListingUpdateManyDataInput: ListingUpdateManyDataInputInputObject
      savedListUpsertNestedInput: savedListUpsertNestedInputInputObject
      UserUpsertNestedInput: UserUpsertNestedInputInputObject
      LocationUpdateOneInput: LocationUpdateOneInputInputObject
      LocationUpdateDataInput: LocationUpdateDataInputInputObject
      UserUpdateOneWithoutAddressInput: UserUpdateOneWithoutAddressInputInputObject
      UserUpdateWithoutAddressDataInput: UserUpdateWithoutAddressDataInputInputObject
      UserUpsertWithoutAddressInput: UserUpsertWithoutAddressInputInputObject
      LocationUpsertNestedInput: LocationUpsertNestedInputInputObject
      PaymentUpdateOneWithoutBookingInput: PaymentUpdateOneWithoutBookingInputInputObject
      PaymentUpdateWithoutBookingDataInput: PaymentUpdateWithoutBookingDataInputInputObject
      PaymentAccountUpdateOneRequiredWithoutPaymentsInput: PaymentAccountUpdateOneRequiredWithoutPaymentsInputInputObject
      PaymentAccountUpdateWithoutPaymentsDataInput: PaymentAccountUpdateWithoutPaymentsDataInputInputObject
      PaymentAccountUpsertWithoutPaymentsInput: PaymentAccountUpsertWithoutPaymentsInputInputObject
      PaymentUpsertWithoutBookingInput: PaymentUpsertWithoutBookingInputInputObject
      BookingUpsertWithWhereUniqueWithoutListingInput: BookingUpsertWithWhereUniqueWithoutListingInputInputObject
      BookingScalarWhereInput: BookingScalarWhereInputInputObject
      BookingUpdateManyWithWhereNestedInput: BookingUpdateManyWithWhereNestedInputInputObject
      BookingUpdateManyDataInput: BookingUpdateManyDataInputInputObject
      ListingUpsertWithWhereUniqueWithoutVendorInput: ListingUpsertWithWhereUniqueWithoutVendorInputInputObject
      VendorUpdateManyMutationInput: VendorUpdateManyMutationInputInputObject
      UserUpdateInput: UserUpdateInputInputObject
      UserUpdateManyMutationInput: UserUpdateManyMutationInputInputObject
      LocationUpdateInput: LocationUpdateInputInputObject
      LocationUpdateManyMutationInput: LocationUpdateManyMutationInputInputObject
      ListingUpdateInput: ListingUpdateInputInputObject
      ListingUpdateManyMutationInput: ListingUpdateManyMutationInputInputObject
      PictureCreateInput: PictureCreateInputInputObject
      ListingCreateOneWithoutPhotosInput: ListingCreateOneWithoutPhotosInputInputObject
      ListingCreateWithoutPhotosInput: ListingCreateWithoutPhotosInputInputObject
      PictureUpdateInput: PictureUpdateInputInputObject
      ListingUpdateOneRequiredWithoutPhotosInput: ListingUpdateOneRequiredWithoutPhotosInputInputObject
      ListingUpdateWithoutPhotosDataInput: ListingUpdateWithoutPhotosDataInputInputObject
      ListingUpsertWithoutPhotosInput: ListingUpsertWithoutPhotosInputInputObject
      PictureUpdateManyMutationInput: PictureUpdateManyMutationInputInputObject
      ViewsCreateInput: ViewsCreateInputInputObject
      ListingCreateOneWithoutViewsInput: ListingCreateOneWithoutViewsInputInputObject
      ListingCreateWithoutViewsInput: ListingCreateWithoutViewsInputInputObject
      ViewsUpdateInput: ViewsUpdateInputInputObject
      ListingUpdateOneRequiredWithoutViewsInput: ListingUpdateOneRequiredWithoutViewsInputInputObject
      ListingUpdateWithoutViewsDataInput: ListingUpdateWithoutViewsDataInputInputObject
      ListingUpsertWithoutViewsInput: ListingUpsertWithoutViewsInputInputObject
      ViewsUpdateManyMutationInput: ViewsUpdateManyMutationInputInputObject
      ReviewCreateInput: ReviewCreateInputInputObject
      ListingCreateOneWithoutReviewsInput: ListingCreateOneWithoutReviewsInputInputObject
      ListingCreateWithoutReviewsInput: ListingCreateWithoutReviewsInputInputObject
      ReviewUpdateInput: ReviewUpdateInputInputObject
      ListingUpdateOneRequiredWithoutReviewsInput: ListingUpdateOneRequiredWithoutReviewsInputInputObject
      ListingUpdateWithoutReviewsDataInput: ListingUpdateWithoutReviewsDataInputInputObject
      ListingUpsertWithoutReviewsInput: ListingUpsertWithoutReviewsInputInputObject
      ReviewUpdateManyMutationInput: ReviewUpdateManyMutationInputInputObject
      BookingCreateInput: BookingCreateInputInputObject
      ListingCreateOneWithoutBookingsInput: ListingCreateOneWithoutBookingsInputInputObject
      ListingCreateWithoutBookingsInput: ListingCreateWithoutBookingsInputInputObject
      BookingUpdateInput: BookingUpdateInputInputObject
      ListingUpdateOneRequiredWithoutBookingsInput: ListingUpdateOneRequiredWithoutBookingsInputInputObject
      ListingUpdateWithoutBookingsDataInput: ListingUpdateWithoutBookingsDataInputInputObject
      ListingUpsertWithoutBookingsInput: ListingUpsertWithoutBookingsInputInputObject
      BookingUpdateManyMutationInput: BookingUpdateManyMutationInputInputObject
      PaymentCreateInput: PaymentCreateInputInputObject
      BookingCreateOneWithoutPaymentInput: BookingCreateOneWithoutPaymentInputInputObject
      BookingCreateWithoutPaymentInput: BookingCreateWithoutPaymentInputInputObject
      PaymentUpdateInput: PaymentUpdateInputInputObject
      BookingUpdateOneRequiredWithoutPaymentInput: BookingUpdateOneRequiredWithoutPaymentInputInputObject
      BookingUpdateWithoutPaymentDataInput: BookingUpdateWithoutPaymentDataInputInputObject
      BookingUpsertWithoutPaymentInput: BookingUpsertWithoutPaymentInputInputObject
      PaymentUpdateManyMutationInput: PaymentUpdateManyMutationInputInputObject
      PaymentAccountCreateInput: PaymentAccountCreateInputInputObject
      PaymentCreateManyWithoutPaymentMethodInput: PaymentCreateManyWithoutPaymentMethodInputInputObject
      PaymentCreateWithoutPaymentMethodInput: PaymentCreateWithoutPaymentMethodInputInputObject
      PaymentAccountUpdateInput: PaymentAccountUpdateInputInputObject
      PaymentUpdateManyWithoutPaymentMethodInput: PaymentUpdateManyWithoutPaymentMethodInputInputObject
      PaymentUpdateWithWhereUniqueWithoutPaymentMethodInput: PaymentUpdateWithWhereUniqueWithoutPaymentMethodInputInputObject
      PaymentUpdateWithoutPaymentMethodDataInput: PaymentUpdateWithoutPaymentMethodDataInputInputObject
      PaymentUpsertWithWhereUniqueWithoutPaymentMethodInput: PaymentUpsertWithWhereUniqueWithoutPaymentMethodInputInputObject
      PaymentScalarWhereInput: PaymentScalarWhereInputInputObject
      PaymentUpdateManyWithWhereNestedInput: PaymentUpdateManyWithWhereNestedInputInputObject
      PaymentUpdateManyDataInput: PaymentUpdateManyDataInputInputObject
      PaymentAccountUpdateManyMutationInput: PaymentAccountUpdateManyMutationInputInputObject
      savedListUpdateInput: savedListUpdateInputInputObject
      VendorSubscriptionWhereInput: VendorSubscriptionWhereInputInputObject
      UserSubscriptionWhereInput: UserSubscriptionWhereInputInputObject
      LocationSubscriptionWhereInput: LocationSubscriptionWhereInputInputObject
      ListingSubscriptionWhereInput: ListingSubscriptionWhereInputInputObject
      PictureSubscriptionWhereInput: PictureSubscriptionWhereInputInputObject
      ViewsSubscriptionWhereInput: ViewsSubscriptionWhereInputInputObject
      ReviewSubscriptionWhereInput: ReviewSubscriptionWhereInputInputObject
      BookingSubscriptionWhereInput: BookingSubscriptionWhereInputInputObject
      PaymentSubscriptionWhereInput: PaymentSubscriptionWhereInputInputObject
      PaymentAccountSubscriptionWhereInput: PaymentAccountSubscriptionWhereInputInputObject
      savedListSubscriptionWhereInput: savedListSubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    VENDOR_TYPE: VENDOR_TYPEValues,
    PAYMENT_PROVIDER: PAYMENT_PROVIDERValues,
    ListingOrderByInput: ListingOrderByInputValues,
    ReviewOrderByInput: ReviewOrderByInputValues,
    BookingOrderByInput: BookingOrderByInputValues,
    PaymentOrderByInput: PaymentOrderByInputValues,
    PictureOrderByInput: PictureOrderByInputValues,
    VendorOrderByInput: VendorOrderByInputValues,
    UserOrderByInput: UserOrderByInputValues,
    LocationOrderByInput: LocationOrderByInputValues,
    ViewsOrderByInput: ViewsOrderByInputValues,
    PaymentAccountOrderByInput: PaymentAccountOrderByInputValues,
    savedListOrderByInput: savedListOrderByInputValues,
    MutationType: MutationTypeValues,
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'vendor', args?: QueryVendorArgs[] | false, alias?: string  } 
  | { name: 'vendors', args?: QueryVendorsArgs[] | false, alias?: string  } 
  | { name: 'vendorsConnection', args?: QueryVendorsConnectionArgs[] | false, alias?: string  } 
  | { name: 'user', args?: QueryUserArgs[] | false, alias?: string  } 
  | { name: 'users', args?: QueryUsersArgs[] | false, alias?: string  } 
  | { name: 'usersConnection', args?: QueryUsersConnectionArgs[] | false, alias?: string  } 
  | { name: 'location', args?: QueryLocationArgs[] | false, alias?: string  } 
  | { name: 'locations', args?: QueryLocationsArgs[] | false, alias?: string  } 
  | { name: 'locationsConnection', args?: QueryLocationsConnectionArgs[] | false, alias?: string  } 
  | { name: 'listing', args?: QueryListingArgs[] | false, alias?: string  } 
  | { name: 'listings', args?: QueryListingsArgs[] | false, alias?: string  } 
  | { name: 'listingsConnection', args?: QueryListingsConnectionArgs[] | false, alias?: string  } 
  | { name: 'picture', args?: QueryPictureArgs[] | false, alias?: string  } 
  | { name: 'pictures', args?: QueryPicturesArgs[] | false, alias?: string  } 
  | { name: 'picturesConnection', args?: QueryPicturesConnectionArgs[] | false, alias?: string  } 
  | { name: 'views', args?: QueryViewsArgs[] | false, alias?: string  } 
  | { name: 'viewses', args?: QueryViewsesArgs[] | false, alias?: string  } 
  | { name: 'viewsesConnection', args?: QueryViewsesConnectionArgs[] | false, alias?: string  } 
  | { name: 'review', args?: QueryReviewArgs[] | false, alias?: string  } 
  | { name: 'reviews', args?: QueryReviewsArgs[] | false, alias?: string  } 
  | { name: 'reviewsConnection', args?: QueryReviewsConnectionArgs[] | false, alias?: string  } 
  | { name: 'booking', args?: QueryBookingArgs[] | false, alias?: string  } 
  | { name: 'bookings', args?: QueryBookingsArgs[] | false, alias?: string  } 
  | { name: 'bookingsConnection', args?: QueryBookingsConnectionArgs[] | false, alias?: string  } 
  | { name: 'payment', args?: QueryPaymentArgs[] | false, alias?: string  } 
  | { name: 'payments', args?: QueryPaymentsArgs[] | false, alias?: string  } 
  | { name: 'paymentsConnection', args?: QueryPaymentsConnectionArgs[] | false, alias?: string  } 
  | { name: 'paymentAccount', args?: QueryPaymentAccountArgs[] | false, alias?: string  } 
  | { name: 'paymentAccounts', args?: QueryPaymentAccountsArgs[] | false, alias?: string  } 
  | { name: 'paymentAccountsConnection', args?: QueryPaymentAccountsConnectionArgs[] | false, alias?: string  } 
  | { name: 'savedList', args?: QuerySavedListArgs[] | false, alias?: string  } 
  | { name: 'savedLists', args?: QuerySavedListsArgs[] | false, alias?: string  } 
  | { name: 'savedListsConnection', args?: QuerySavedListsConnectionArgs[] | false, alias?: string  } 

type QueryFields =
  | 'vendor'
  | 'vendors'
  | 'vendorsConnection'
  | 'user'
  | 'users'
  | 'usersConnection'
  | 'location'
  | 'locations'
  | 'locationsConnection'
  | 'listing'
  | 'listings'
  | 'listingsConnection'
  | 'picture'
  | 'pictures'
  | 'picturesConnection'
  | 'views'
  | 'viewses'
  | 'viewsesConnection'
  | 'review'
  | 'reviews'
  | 'reviewsConnection'
  | 'booking'
  | 'bookings'
  | 'bookingsConnection'
  | 'payment'
  | 'payments'
  | 'paymentsConnection'
  | 'paymentAccount'
  | 'paymentAccounts'
  | 'paymentAccountsConnection'
  | 'savedList'
  | 'savedLists'
  | 'savedListsConnection'


type QueryVendorArgs =
  | 'where'
type QueryVendorsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryVendorsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUserArgs =
  | 'where'
type QueryUsersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUsersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryLocationArgs =
  | 'where'
type QueryLocationsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryLocationsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryListingArgs =
  | 'where'
type QueryListingsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryListingsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPictureArgs =
  | 'where'
type QueryPicturesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPicturesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryViewsArgs =
  | 'where'
type QueryViewsesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryViewsesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryReviewArgs =
  | 'where'
type QueryReviewsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryReviewsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryBookingArgs =
  | 'where'
type QueryBookingsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryBookingsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPaymentArgs =
  | 'where'
type QueryPaymentsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPaymentsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPaymentAccountArgs =
  | 'where'
type QueryPaymentAccountsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPaymentAccountsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySavedListArgs =
  | 'where'
type QuerySavedListsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySavedListsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QueryFieldDetails {
  vendor: {
    type: 'Vendor'
    args: Record<QueryVendorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: VendorWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Vendor | null> | prisma.Vendor | null
  }
  vendors: {
    type: 'Vendor'
    args: Record<QueryVendorsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: VendorWhereInput | null, orderBy?: prisma.VendorOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Vendor[]> | prisma.Vendor[]
  }
  vendorsConnection: {
    type: 'VendorConnection'
    args: Record<QueryVendorsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: VendorWhereInput | null, orderBy?: prisma.VendorOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VendorConnection> | prisma.VendorConnection
  }
  user: {
    type: 'User'
    args: Record<QueryUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  users: {
    type: 'User'
    args: Record<QueryUsersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
  usersConnection: {
    type: 'UserConnection'
    args: Record<QueryUsersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserConnection> | prisma.UserConnection
  }
  location: {
    type: 'Location'
    args: Record<QueryLocationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: LocationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Location | null> | prisma.Location | null
  }
  locations: {
    type: 'Location'
    args: Record<QueryLocationsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: LocationWhereInput | null, orderBy?: prisma.LocationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Location[]> | prisma.Location[]
  }
  locationsConnection: {
    type: 'LocationConnection'
    args: Record<QueryLocationsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: LocationWhereInput | null, orderBy?: prisma.LocationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LocationConnection> | prisma.LocationConnection
  }
  listing: {
    type: 'Listing'
    args: Record<QueryListingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ListingWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Listing | null> | prisma.Listing | null
  }
  listings: {
    type: 'Listing'
    args: Record<QueryListingsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ListingWhereInput | null, orderBy?: prisma.ListingOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Listing[]> | prisma.Listing[]
  }
  listingsConnection: {
    type: 'ListingConnection'
    args: Record<QueryListingsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ListingWhereInput | null, orderBy?: prisma.ListingOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ListingConnection> | prisma.ListingConnection
  }
  picture: {
    type: 'Picture'
    args: Record<QueryPictureArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: PictureWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Picture | null> | prisma.Picture | null
  }
  pictures: {
    type: 'Picture'
    args: Record<QueryPicturesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PictureWhereInput | null, orderBy?: prisma.PictureOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Picture[]> | prisma.Picture[]
  }
  picturesConnection: {
    type: 'PictureConnection'
    args: Record<QueryPicturesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PictureWhereInput | null, orderBy?: prisma.PictureOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PictureConnection> | prisma.PictureConnection
  }
  views: {
    type: 'Views'
    args: Record<QueryViewsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ViewsWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Views | null> | prisma.Views | null
  }
  viewses: {
    type: 'Views'
    args: Record<QueryViewsesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ViewsWhereInput | null, orderBy?: prisma.ViewsOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Views[]> | prisma.Views[]
  }
  viewsesConnection: {
    type: 'ViewsConnection'
    args: Record<QueryViewsesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ViewsWhereInput | null, orderBy?: prisma.ViewsOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ViewsConnection> | prisma.ViewsConnection
  }
  review: {
    type: 'Review'
    args: Record<QueryReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ReviewWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review | null> | prisma.Review | null
  }
  reviews: {
    type: 'Review'
    args: Record<QueryReviewsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ReviewWhereInput | null, orderBy?: prisma.ReviewOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review[]> | prisma.Review[]
  }
  reviewsConnection: {
    type: 'ReviewConnection'
    args: Record<QueryReviewsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ReviewWhereInput | null, orderBy?: prisma.ReviewOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ReviewConnection> | prisma.ReviewConnection
  }
  booking: {
    type: 'Booking'
    args: Record<QueryBookingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: BookingWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Booking | null> | prisma.Booking | null
  }
  bookings: {
    type: 'Booking'
    args: Record<QueryBookingsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: BookingWhereInput | null, orderBy?: prisma.BookingOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Booking[]> | prisma.Booking[]
  }
  bookingsConnection: {
    type: 'BookingConnection'
    args: Record<QueryBookingsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: BookingWhereInput | null, orderBy?: prisma.BookingOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BookingConnection> | prisma.BookingConnection
  }
  payment: {
    type: 'Payment'
    args: Record<QueryPaymentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: PaymentWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Payment | null> | prisma.Payment | null
  }
  payments: {
    type: 'Payment'
    args: Record<QueryPaymentsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PaymentWhereInput | null, orderBy?: prisma.PaymentOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Payment[]> | prisma.Payment[]
  }
  paymentsConnection: {
    type: 'PaymentConnection'
    args: Record<QueryPaymentsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PaymentWhereInput | null, orderBy?: prisma.PaymentOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentConnection> | prisma.PaymentConnection
  }
  paymentAccount: {
    type: 'PaymentAccount'
    args: Record<QueryPaymentAccountArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: PaymentAccountWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentAccount | null> | prisma.PaymentAccount | null
  }
  paymentAccounts: {
    type: 'PaymentAccount'
    args: Record<QueryPaymentAccountsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PaymentAccountWhereInput | null, orderBy?: prisma.PaymentAccountOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentAccount[]> | prisma.PaymentAccount[]
  }
  paymentAccountsConnection: {
    type: 'PaymentAccountConnection'
    args: Record<QueryPaymentAccountsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PaymentAccountWhereInput | null, orderBy?: prisma.PaymentAccountOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentAccountConnection> | prisma.PaymentAccountConnection
  }
  savedList: {
    type: 'savedList'
    args: Record<QuerySavedListArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: savedListWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.savedList | null> | prisma.savedList | null
  }
  savedLists: {
    type: 'savedList'
    args: Record<QuerySavedListsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: savedListWhereInput | null, orderBy?: prisma.savedListOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.savedList[]> | prisma.savedList[]
  }
  savedListsConnection: {
    type: 'savedListConnection'
    args: Record<QuerySavedListsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: savedListWhereInput | null, orderBy?: prisma.savedListOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.savedListConnection> | prisma.savedListConnection
  }
}
  

// Types for Vendor

type VendorObject =
  | VendorFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'firstName', args?: [] | false, alias?: string  } 
  | { name: 'lastName', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'listings', args?: VendorListingsArgs[] | false, alias?: string  } 
  | { name: 'vendorType', args?: [] | false, alias?: string  } 

type VendorFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'firstName'
  | 'lastName'
  | 'email'
  | 'password'
  | 'phone'
  | 'listings'
  | 'vendorType'


type VendorListingsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface VendorFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  firstName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lastName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  listings: {
    type: 'Listing'
    args: Record<VendorListingsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Vendor">,
      args: { where?: ListingWhereInput | null, orderBy?: prisma.ListingOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Listing[]> | prisma.Listing[]
  }
  vendorType: {
    type: 'VENDOR_TYPE'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Vendor">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VENDOR_TYPE | null> | prisma.VENDOR_TYPE | null
  }
}
  

// Types for Listing

type ListingObject =
  | ListingFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'maxGuests', args?: [] | false, alias?: string  } 
  | { name: 'reviews', args?: ListingReviewsArgs[] | false, alias?: string  } 
  | { name: 'vendor', args?: [] | false, alias?: string  } 
  | { name: 'pricePerPlate', args?: [] | false, alias?: string  } 
  | { name: 'views', args?: [] | false, alias?: string  } 
  | { name: 'bookings', args?: ListingBookingsArgs[] | false, alias?: string  } 
  | { name: 'photos', args?: ListingPhotosArgs[] | false, alias?: string  } 

type ListingFields =
  | 'id'
  | 'title'
  | 'description'
  | 'createdAt'
  | 'updatedAt'
  | 'maxGuests'
  | 'reviews'
  | 'vendor'
  | 'pricePerPlate'
  | 'views'
  | 'bookings'
  | 'photos'


type ListingReviewsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type ListingBookingsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type ListingPhotosArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface ListingFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  maxGuests: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  reviews: {
    type: 'Review'
    args: Record<ListingReviewsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Listing">,
      args: { where?: ReviewWhereInput | null, orderBy?: prisma.ReviewOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review[]> | prisma.Review[]
  }
  vendor: {
    type: 'Vendor'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Listing">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Vendor> | prisma.Vendor
  }
  pricePerPlate: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  views: {
    type: 'Views'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Listing">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Views | null> | prisma.Views | null
  }
  bookings: {
    type: 'Booking'
    args: Record<ListingBookingsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Listing">,
      args: { where?: BookingWhereInput | null, orderBy?: prisma.BookingOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Booking[]> | prisma.Booking[]
  }
  photos: {
    type: 'Picture'
    args: Record<ListingPhotosArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Listing">,
      args: { where?: PictureWhereInput | null, orderBy?: prisma.PictureOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Picture[]> | prisma.Picture[]
  }
}
  

// Types for Review

type ReviewObject =
  | ReviewFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'comment', args?: [] | false, alias?: string  } 
  | { name: 'stars', args?: [] | false, alias?: string  } 
  | { name: 'listing', args?: [] | false, alias?: string  } 

type ReviewFields =
  | 'id'
  | 'createdAt'
  | 'title'
  | 'comment'
  | 'stars'
  | 'listing'



  

export interface ReviewFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  comment: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  stars: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  listing: {
    type: 'Listing'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Review">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Listing> | prisma.Listing
  }
}
  

// Types for Views

type ViewsObject =
  | ViewsFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'lastWeek', args?: [] | false, alias?: string  } 
  | { name: 'listing', args?: [] | false, alias?: string  } 

type ViewsFields =
  | 'id'
  | 'lastWeek'
  | 'listing'



  

export interface ViewsFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lastWeek: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  listing: {
    type: 'Listing'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Views">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Listing> | prisma.Listing
  }
}
  

// Types for Booking

type BookingObject =
  | BookingFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'bookee', args?: [] | false, alias?: string  } 
  | { name: 'listing', args?: [] | false, alias?: string  } 
  | { name: 'occasionDate', args?: [] | false, alias?: string  } 
  | { name: 'location', args?: [] | false, alias?: string  } 
  | { name: 'payment', args?: [] | false, alias?: string  } 
  | { name: 'isFulfilled', args?: [] | false, alias?: string  } 

type BookingFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'bookee'
  | 'listing'
  | 'occasionDate'
  | 'location'
  | 'payment'
  | 'isFulfilled'



  

export interface BookingFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  bookee: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Booking">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  listing: {
    type: 'Listing'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Booking">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Listing> | prisma.Listing
  }
  occasionDate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  location: {
    type: 'Location'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Booking">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Location | null> | prisma.Location | null
  }
  payment: {
    type: 'Payment'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Booking">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Payment | null> | prisma.Payment | null
  }
  isFulfilled: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for User

type UserObject =
  | UserFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'firstName', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'lastName', args?: [] | false, alias?: string  } 
  | { name: 'address', args?: [] | false, alias?: string  } 
  | { name: 'saved', args?: [] | false, alias?: string  } 
  | { name: 'photoUrl', args?: [] | false, alias?: string  } 

type UserFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'email'
  | 'firstName'
  | 'phone'
  | 'password'
  | 'lastName'
  | 'address'
  | 'saved'
  | 'photoUrl'



  

export interface UserFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  firstName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lastName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  address: {
    type: 'Location'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"User">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Location | null> | prisma.Location | null
  }
  saved: {
    type: 'savedList'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"User">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.savedList | null> | prisma.savedList | null
  }
  photoUrl: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for Location

type LocationObject =
  | LocationFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'lat', args?: [] | false, alias?: string  } 
  | { name: 'lng', args?: [] | false, alias?: string  } 
  | { name: 'user', args?: [] | false, alias?: string  } 
  | { name: 'directions', args?: [] | false, alias?: string  } 

type LocationFields =
  | 'id'
  | 'lat'
  | 'lng'
  | 'user'
  | 'directions'



  

export interface LocationFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lat: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lng: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  user: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Location">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  directions: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for savedList

type savedListObject =
  | savedListFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'listings', args?: savedListListingsArgs[] | false, alias?: string  } 

type savedListFields =
  | 'id'
  | 'listings'


type savedListListingsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface savedListFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  listings: {
    type: 'Listing'
    args: Record<savedListListingsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"savedList">,
      args: { where?: ListingWhereInput | null, orderBy?: prisma.ListingOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Listing[]> | prisma.Listing[]
  }
}
  

// Types for Payment

type PaymentObject =
  | PaymentFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'serviceFee', args?: [] | false, alias?: string  } 
  | { name: 'price', args?: [] | false, alias?: string  } 
  | { name: 'totalPrice', args?: [] | false, alias?: string  } 
  | { name: 'booking', args?: [] | false, alias?: string  } 
  | { name: 'paymentMethod', args?: [] | false, alias?: string  } 

type PaymentFields =
  | 'id'
  | 'createdAt'
  | 'serviceFee'
  | 'price'
  | 'totalPrice'
  | 'booking'
  | 'paymentMethod'



  

export interface PaymentFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  serviceFee: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  price: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  totalPrice: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  booking: {
    type: 'Booking'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Payment">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Booking> | prisma.Booking
  }
  paymentMethod: {
    type: 'PaymentAccount'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Payment">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentAccount> | prisma.PaymentAccount
  }
}
  

// Types for PaymentAccount

type PaymentAccountObject =
  | PaymentAccountFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'type', args?: [] | false, alias?: string  } 
  | { name: 'user', args?: [] | false, alias?: string  } 
  | { name: 'payments', args?: PaymentAccountPaymentsArgs[] | false, alias?: string  } 

type PaymentAccountFields =
  | 'id'
  | 'createdAt'
  | 'type'
  | 'user'
  | 'payments'


type PaymentAccountPaymentsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface PaymentAccountFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  type: {
    type: 'PAYMENT_PROVIDER'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PaymentAccount">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PAYMENT_PROVIDER | null> | prisma.PAYMENT_PROVIDER | null
  }
  user: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PaymentAccount">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  payments: {
    type: 'Payment'
    args: Record<PaymentAccountPaymentsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"PaymentAccount">,
      args: { where?: PaymentWhereInput | null, orderBy?: prisma.PaymentOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Payment[]> | prisma.Payment[]
  }
}
  

// Types for Picture

type PictureObject =
  | PictureFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 
  | { name: 'listing', args?: [] | false, alias?: string  } 

type PictureFields =
  | 'id'
  | 'url'
  | 'listing'



  

export interface PictureFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  listing: {
    type: 'Listing'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Picture">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Listing> | prisma.Listing
  }
}
  

// Types for VendorConnection

type VendorConnectionObject =
  | VendorConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type VendorConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface VendorConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"VendorConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'VendorEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"VendorConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VendorEdge[]> | prisma.VendorEdge[]
  }
  aggregate: {
    type: 'AggregateVendor'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"VendorConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateVendor> | prisma.AggregateVendor
  }
}
  

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage', args?: [] | false, alias?: string  } 
  | { name: 'hasPreviousPage', args?: [] | false, alias?: string  } 
  | { name: 'startCursor', args?: [] | false, alias?: string  } 
  | { name: 'endCursor', args?: [] | false, alias?: string  } 

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'



  

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for VendorEdge

type VendorEdgeObject =
  | VendorEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type VendorEdgeFields =
  | 'node'
  | 'cursor'



  

export interface VendorEdgeFieldDetails {
  node: {
    type: 'Vendor'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"VendorEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Vendor> | prisma.Vendor
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateVendor

type AggregateVendorObject =
  | AggregateVendorFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateVendorFields =
  | 'count'



  

export interface AggregateVendorFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for UserConnection

type UserConnectionObject =
  | UserConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type UserConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface UserConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'UserEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserEdge[]> | prisma.UserEdge[]
  }
  aggregate: {
    type: 'AggregateUser'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateUser> | prisma.AggregateUser
  }
}
  

// Types for UserEdge

type UserEdgeObject =
  | UserEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type UserEdgeFields =
  | 'node'
  | 'cursor'



  

export interface UserEdgeFieldDetails {
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateUser

type AggregateUserObject =
  | AggregateUserFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateUserFields =
  | 'count'



  

export interface AggregateUserFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for LocationConnection

type LocationConnectionObject =
  | LocationConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type LocationConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface LocationConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"LocationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'LocationEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"LocationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LocationEdge[]> | prisma.LocationEdge[]
  }
  aggregate: {
    type: 'AggregateLocation'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"LocationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateLocation> | prisma.AggregateLocation
  }
}
  

// Types for LocationEdge

type LocationEdgeObject =
  | LocationEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type LocationEdgeFields =
  | 'node'
  | 'cursor'



  

export interface LocationEdgeFieldDetails {
  node: {
    type: 'Location'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"LocationEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Location> | prisma.Location
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateLocation

type AggregateLocationObject =
  | AggregateLocationFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateLocationFields =
  | 'count'



  

export interface AggregateLocationFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ListingConnection

type ListingConnectionObject =
  | ListingConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ListingConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ListingConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ListingConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ListingEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ListingConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ListingEdge[]> | prisma.ListingEdge[]
  }
  aggregate: {
    type: 'AggregateListing'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ListingConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateListing> | prisma.AggregateListing
  }
}
  

// Types for ListingEdge

type ListingEdgeObject =
  | ListingEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ListingEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ListingEdgeFieldDetails {
  node: {
    type: 'Listing'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ListingEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Listing> | prisma.Listing
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateListing

type AggregateListingObject =
  | AggregateListingFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateListingFields =
  | 'count'



  

export interface AggregateListingFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PictureConnection

type PictureConnectionObject =
  | PictureConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type PictureConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface PictureConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PictureConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'PictureEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"PictureConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PictureEdge[]> | prisma.PictureEdge[]
  }
  aggregate: {
    type: 'AggregatePicture'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PictureConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregatePicture> | prisma.AggregatePicture
  }
}
  

// Types for PictureEdge

type PictureEdgeObject =
  | PictureEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type PictureEdgeFields =
  | 'node'
  | 'cursor'



  

export interface PictureEdgeFieldDetails {
  node: {
    type: 'Picture'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PictureEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Picture> | prisma.Picture
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregatePicture

type AggregatePictureObject =
  | AggregatePictureFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregatePictureFields =
  | 'count'



  

export interface AggregatePictureFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ViewsConnection

type ViewsConnectionObject =
  | ViewsConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ViewsConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ViewsConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ViewsConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ViewsEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ViewsConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ViewsEdge[]> | prisma.ViewsEdge[]
  }
  aggregate: {
    type: 'AggregateViews'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ViewsConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateViews> | prisma.AggregateViews
  }
}
  

// Types for ViewsEdge

type ViewsEdgeObject =
  | ViewsEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ViewsEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ViewsEdgeFieldDetails {
  node: {
    type: 'Views'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ViewsEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Views> | prisma.Views
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateViews

type AggregateViewsObject =
  | AggregateViewsFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateViewsFields =
  | 'count'



  

export interface AggregateViewsFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ReviewConnection

type ReviewConnectionObject =
  | ReviewConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ReviewConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ReviewConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ReviewConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ReviewEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ReviewConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ReviewEdge[]> | prisma.ReviewEdge[]
  }
  aggregate: {
    type: 'AggregateReview'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ReviewConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateReview> | prisma.AggregateReview
  }
}
  

// Types for ReviewEdge

type ReviewEdgeObject =
  | ReviewEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ReviewEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ReviewEdgeFieldDetails {
  node: {
    type: 'Review'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ReviewEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review> | prisma.Review
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateReview

type AggregateReviewObject =
  | AggregateReviewFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateReviewFields =
  | 'count'



  

export interface AggregateReviewFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for BookingConnection

type BookingConnectionObject =
  | BookingConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type BookingConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface BookingConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BookingConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'BookingEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"BookingConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BookingEdge[]> | prisma.BookingEdge[]
  }
  aggregate: {
    type: 'AggregateBooking'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BookingConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateBooking> | prisma.AggregateBooking
  }
}
  

// Types for BookingEdge

type BookingEdgeObject =
  | BookingEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type BookingEdgeFields =
  | 'node'
  | 'cursor'



  

export interface BookingEdgeFieldDetails {
  node: {
    type: 'Booking'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BookingEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Booking> | prisma.Booking
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateBooking

type AggregateBookingObject =
  | AggregateBookingFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateBookingFields =
  | 'count'



  

export interface AggregateBookingFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PaymentConnection

type PaymentConnectionObject =
  | PaymentConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type PaymentConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface PaymentConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PaymentConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'PaymentEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"PaymentConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentEdge[]> | prisma.PaymentEdge[]
  }
  aggregate: {
    type: 'AggregatePayment'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PaymentConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregatePayment> | prisma.AggregatePayment
  }
}
  

// Types for PaymentEdge

type PaymentEdgeObject =
  | PaymentEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type PaymentEdgeFields =
  | 'node'
  | 'cursor'



  

export interface PaymentEdgeFieldDetails {
  node: {
    type: 'Payment'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PaymentEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Payment> | prisma.Payment
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregatePayment

type AggregatePaymentObject =
  | AggregatePaymentFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregatePaymentFields =
  | 'count'



  

export interface AggregatePaymentFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PaymentAccountConnection

type PaymentAccountConnectionObject =
  | PaymentAccountConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type PaymentAccountConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface PaymentAccountConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PaymentAccountConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'PaymentAccountEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"PaymentAccountConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentAccountEdge[]> | prisma.PaymentAccountEdge[]
  }
  aggregate: {
    type: 'AggregatePaymentAccount'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PaymentAccountConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregatePaymentAccount> | prisma.AggregatePaymentAccount
  }
}
  

// Types for PaymentAccountEdge

type PaymentAccountEdgeObject =
  | PaymentAccountEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type PaymentAccountEdgeFields =
  | 'node'
  | 'cursor'



  

export interface PaymentAccountEdgeFieldDetails {
  node: {
    type: 'PaymentAccount'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PaymentAccountEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentAccount> | prisma.PaymentAccount
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregatePaymentAccount

type AggregatePaymentAccountObject =
  | AggregatePaymentAccountFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregatePaymentAccountFields =
  | 'count'



  

export interface AggregatePaymentAccountFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for savedListConnection

type savedListConnectionObject =
  | savedListConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type savedListConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface savedListConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"savedListConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'savedListEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"savedListConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.savedListEdge[]> | prisma.savedListEdge[]
  }
  aggregate: {
    type: 'AggregatesavedList'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"savedListConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregatesavedList> | prisma.AggregatesavedList
  }
}
  

// Types for savedListEdge

type savedListEdgeObject =
  | savedListEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type savedListEdgeFields =
  | 'node'
  | 'cursor'



  

export interface savedListEdgeFieldDetails {
  node: {
    type: 'savedList'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"savedListEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.savedList> | prisma.savedList
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregatesavedList

type AggregatesavedListObject =
  | AggregatesavedListFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregatesavedListFields =
  | 'count'



  

export interface AggregatesavedListFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: 'createVendor', args?: MutationCreateVendorArgs[] | false, alias?: string  } 
  | { name: 'updateVendor', args?: MutationUpdateVendorArgs[] | false, alias?: string  } 
  | { name: 'updateManyVendors', args?: MutationUpdateManyVendorsArgs[] | false, alias?: string  } 
  | { name: 'upsertVendor', args?: MutationUpsertVendorArgs[] | false, alias?: string  } 
  | { name: 'deleteVendor', args?: MutationDeleteVendorArgs[] | false, alias?: string  } 
  | { name: 'deleteManyVendors', args?: MutationDeleteManyVendorsArgs[] | false, alias?: string  } 
  | { name: 'createUser', args?: MutationCreateUserArgs[] | false, alias?: string  } 
  | { name: 'updateUser', args?: MutationUpdateUserArgs[] | false, alias?: string  } 
  | { name: 'updateManyUsers', args?: MutationUpdateManyUsersArgs[] | false, alias?: string  } 
  | { name: 'upsertUser', args?: MutationUpsertUserArgs[] | false, alias?: string  } 
  | { name: 'deleteUser', args?: MutationDeleteUserArgs[] | false, alias?: string  } 
  | { name: 'deleteManyUsers', args?: MutationDeleteManyUsersArgs[] | false, alias?: string  } 
  | { name: 'createLocation', args?: MutationCreateLocationArgs[] | false, alias?: string  } 
  | { name: 'updateLocation', args?: MutationUpdateLocationArgs[] | false, alias?: string  } 
  | { name: 'updateManyLocations', args?: MutationUpdateManyLocationsArgs[] | false, alias?: string  } 
  | { name: 'upsertLocation', args?: MutationUpsertLocationArgs[] | false, alias?: string  } 
  | { name: 'deleteLocation', args?: MutationDeleteLocationArgs[] | false, alias?: string  } 
  | { name: 'deleteManyLocations', args?: MutationDeleteManyLocationsArgs[] | false, alias?: string  } 
  | { name: 'createListing', args?: MutationCreateListingArgs[] | false, alias?: string  } 
  | { name: 'updateListing', args?: MutationUpdateListingArgs[] | false, alias?: string  } 
  | { name: 'updateManyListings', args?: MutationUpdateManyListingsArgs[] | false, alias?: string  } 
  | { name: 'upsertListing', args?: MutationUpsertListingArgs[] | false, alias?: string  } 
  | { name: 'deleteListing', args?: MutationDeleteListingArgs[] | false, alias?: string  } 
  | { name: 'deleteManyListings', args?: MutationDeleteManyListingsArgs[] | false, alias?: string  } 
  | { name: 'createPicture', args?: MutationCreatePictureArgs[] | false, alias?: string  } 
  | { name: 'updatePicture', args?: MutationUpdatePictureArgs[] | false, alias?: string  } 
  | { name: 'updateManyPictures', args?: MutationUpdateManyPicturesArgs[] | false, alias?: string  } 
  | { name: 'upsertPicture', args?: MutationUpsertPictureArgs[] | false, alias?: string  } 
  | { name: 'deletePicture', args?: MutationDeletePictureArgs[] | false, alias?: string  } 
  | { name: 'deleteManyPictures', args?: MutationDeleteManyPicturesArgs[] | false, alias?: string  } 
  | { name: 'createViews', args?: MutationCreateViewsArgs[] | false, alias?: string  } 
  | { name: 'updateViews', args?: MutationUpdateViewsArgs[] | false, alias?: string  } 
  | { name: 'updateManyViewses', args?: MutationUpdateManyViewsesArgs[] | false, alias?: string  } 
  | { name: 'upsertViews', args?: MutationUpsertViewsArgs[] | false, alias?: string  } 
  | { name: 'deleteViews', args?: MutationDeleteViewsArgs[] | false, alias?: string  } 
  | { name: 'deleteManyViewses', args?: MutationDeleteManyViewsesArgs[] | false, alias?: string  } 
  | { name: 'createReview', args?: MutationCreateReviewArgs[] | false, alias?: string  } 
  | { name: 'updateReview', args?: MutationUpdateReviewArgs[] | false, alias?: string  } 
  | { name: 'updateManyReviews', args?: MutationUpdateManyReviewsArgs[] | false, alias?: string  } 
  | { name: 'upsertReview', args?: MutationUpsertReviewArgs[] | false, alias?: string  } 
  | { name: 'deleteReview', args?: MutationDeleteReviewArgs[] | false, alias?: string  } 
  | { name: 'deleteManyReviews', args?: MutationDeleteManyReviewsArgs[] | false, alias?: string  } 
  | { name: 'createBooking', args?: MutationCreateBookingArgs[] | false, alias?: string  } 
  | { name: 'updateBooking', args?: MutationUpdateBookingArgs[] | false, alias?: string  } 
  | { name: 'updateManyBookings', args?: MutationUpdateManyBookingsArgs[] | false, alias?: string  } 
  | { name: 'upsertBooking', args?: MutationUpsertBookingArgs[] | false, alias?: string  } 
  | { name: 'deleteBooking', args?: MutationDeleteBookingArgs[] | false, alias?: string  } 
  | { name: 'deleteManyBookings', args?: MutationDeleteManyBookingsArgs[] | false, alias?: string  } 
  | { name: 'createPayment', args?: MutationCreatePaymentArgs[] | false, alias?: string  } 
  | { name: 'updatePayment', args?: MutationUpdatePaymentArgs[] | false, alias?: string  } 
  | { name: 'updateManyPayments', args?: MutationUpdateManyPaymentsArgs[] | false, alias?: string  } 
  | { name: 'upsertPayment', args?: MutationUpsertPaymentArgs[] | false, alias?: string  } 
  | { name: 'deletePayment', args?: MutationDeletePaymentArgs[] | false, alias?: string  } 
  | { name: 'deleteManyPayments', args?: MutationDeleteManyPaymentsArgs[] | false, alias?: string  } 
  | { name: 'createPaymentAccount', args?: MutationCreatePaymentAccountArgs[] | false, alias?: string  } 
  | { name: 'updatePaymentAccount', args?: MutationUpdatePaymentAccountArgs[] | false, alias?: string  } 
  | { name: 'updateManyPaymentAccounts', args?: MutationUpdateManyPaymentAccountsArgs[] | false, alias?: string  } 
  | { name: 'upsertPaymentAccount', args?: MutationUpsertPaymentAccountArgs[] | false, alias?: string  } 
  | { name: 'deletePaymentAccount', args?: MutationDeletePaymentAccountArgs[] | false, alias?: string  } 
  | { name: 'deleteManyPaymentAccounts', args?: MutationDeleteManyPaymentAccountsArgs[] | false, alias?: string  } 
  | { name: 'createsavedList', args?: MutationCreatesavedListArgs[] | false, alias?: string  } 
  | { name: 'updatesavedList', args?: MutationUpdatesavedListArgs[] | false, alias?: string  } 
  | { name: 'upsertsavedList', args?: MutationUpsertsavedListArgs[] | false, alias?: string  } 
  | { name: 'deletesavedList', args?: MutationDeletesavedListArgs[] | false, alias?: string  } 
  | { name: 'deleteManysavedLists', args?: MutationDeleteManysavedListsArgs[] | false, alias?: string  } 

type MutationFields =
  | 'createVendor'
  | 'updateVendor'
  | 'updateManyVendors'
  | 'upsertVendor'
  | 'deleteVendor'
  | 'deleteManyVendors'
  | 'createUser'
  | 'updateUser'
  | 'updateManyUsers'
  | 'upsertUser'
  | 'deleteUser'
  | 'deleteManyUsers'
  | 'createLocation'
  | 'updateLocation'
  | 'updateManyLocations'
  | 'upsertLocation'
  | 'deleteLocation'
  | 'deleteManyLocations'
  | 'createListing'
  | 'updateListing'
  | 'updateManyListings'
  | 'upsertListing'
  | 'deleteListing'
  | 'deleteManyListings'
  | 'createPicture'
  | 'updatePicture'
  | 'updateManyPictures'
  | 'upsertPicture'
  | 'deletePicture'
  | 'deleteManyPictures'
  | 'createViews'
  | 'updateViews'
  | 'updateManyViewses'
  | 'upsertViews'
  | 'deleteViews'
  | 'deleteManyViewses'
  | 'createReview'
  | 'updateReview'
  | 'updateManyReviews'
  | 'upsertReview'
  | 'deleteReview'
  | 'deleteManyReviews'
  | 'createBooking'
  | 'updateBooking'
  | 'updateManyBookings'
  | 'upsertBooking'
  | 'deleteBooking'
  | 'deleteManyBookings'
  | 'createPayment'
  | 'updatePayment'
  | 'updateManyPayments'
  | 'upsertPayment'
  | 'deletePayment'
  | 'deleteManyPayments'
  | 'createPaymentAccount'
  | 'updatePaymentAccount'
  | 'updateManyPaymentAccounts'
  | 'upsertPaymentAccount'
  | 'deletePaymentAccount'
  | 'deleteManyPaymentAccounts'
  | 'createsavedList'
  | 'updatesavedList'
  | 'upsertsavedList'
  | 'deletesavedList'
  | 'deleteManysavedLists'


type MutationCreateVendorArgs =
  | 'data'
type MutationUpdateVendorArgs =
  | 'data'
  | 'where'
type MutationUpdateManyVendorsArgs =
  | 'data'
  | 'where'
type MutationUpsertVendorArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteVendorArgs =
  | 'where'
type MutationDeleteManyVendorsArgs =
  | 'where'
type MutationCreateUserArgs =
  | 'data'
type MutationUpdateUserArgs =
  | 'data'
  | 'where'
type MutationUpdateManyUsersArgs =
  | 'data'
  | 'where'
type MutationUpsertUserArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteUserArgs =
  | 'where'
type MutationDeleteManyUsersArgs =
  | 'where'
type MutationCreateLocationArgs =
  | 'data'
type MutationUpdateLocationArgs =
  | 'data'
  | 'where'
type MutationUpdateManyLocationsArgs =
  | 'data'
  | 'where'
type MutationUpsertLocationArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteLocationArgs =
  | 'where'
type MutationDeleteManyLocationsArgs =
  | 'where'
type MutationCreateListingArgs =
  | 'data'
type MutationUpdateListingArgs =
  | 'data'
  | 'where'
type MutationUpdateManyListingsArgs =
  | 'data'
  | 'where'
type MutationUpsertListingArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteListingArgs =
  | 'where'
type MutationDeleteManyListingsArgs =
  | 'where'
type MutationCreatePictureArgs =
  | 'data'
type MutationUpdatePictureArgs =
  | 'data'
  | 'where'
type MutationUpdateManyPicturesArgs =
  | 'data'
  | 'where'
type MutationUpsertPictureArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletePictureArgs =
  | 'where'
type MutationDeleteManyPicturesArgs =
  | 'where'
type MutationCreateViewsArgs =
  | 'data'
type MutationUpdateViewsArgs =
  | 'data'
  | 'where'
type MutationUpdateManyViewsesArgs =
  | 'data'
  | 'where'
type MutationUpsertViewsArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteViewsArgs =
  | 'where'
type MutationDeleteManyViewsesArgs =
  | 'where'
type MutationCreateReviewArgs =
  | 'data'
type MutationUpdateReviewArgs =
  | 'data'
  | 'where'
type MutationUpdateManyReviewsArgs =
  | 'data'
  | 'where'
type MutationUpsertReviewArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteReviewArgs =
  | 'where'
type MutationDeleteManyReviewsArgs =
  | 'where'
type MutationCreateBookingArgs =
  | 'data'
type MutationUpdateBookingArgs =
  | 'data'
  | 'where'
type MutationUpdateManyBookingsArgs =
  | 'data'
  | 'where'
type MutationUpsertBookingArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteBookingArgs =
  | 'where'
type MutationDeleteManyBookingsArgs =
  | 'where'
type MutationCreatePaymentArgs =
  | 'data'
type MutationUpdatePaymentArgs =
  | 'data'
  | 'where'
type MutationUpdateManyPaymentsArgs =
  | 'data'
  | 'where'
type MutationUpsertPaymentArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletePaymentArgs =
  | 'where'
type MutationDeleteManyPaymentsArgs =
  | 'where'
type MutationCreatePaymentAccountArgs =
  | 'data'
type MutationUpdatePaymentAccountArgs =
  | 'data'
  | 'where'
type MutationUpdateManyPaymentAccountsArgs =
  | 'data'
  | 'where'
type MutationUpsertPaymentAccountArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletePaymentAccountArgs =
  | 'where'
type MutationDeleteManyPaymentAccountsArgs =
  | 'where'
type MutationCreatesavedListArgs =
  | 'data'
type MutationUpdatesavedListArgs =
  | 'data'
  | 'where'
type MutationUpsertsavedListArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletesavedListArgs =
  | 'where'
type MutationDeleteManysavedListsArgs =
  | 'where'
  

export interface MutationFieldDetails {
  createVendor: {
    type: 'Vendor'
    args: Record<MutationCreateVendorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: VendorCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Vendor> | prisma.Vendor
  }
  updateVendor: {
    type: 'Vendor'
    args: Record<MutationUpdateVendorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: VendorUpdateInput, where: VendorWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Vendor | null> | prisma.Vendor | null
  }
  updateManyVendors: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyVendorsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: VendorUpdateManyMutationInput, where?: VendorWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertVendor: {
    type: 'Vendor'
    args: Record<MutationUpsertVendorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: VendorWhereUniqueInput, create: VendorCreateInput, update: VendorUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Vendor> | prisma.Vendor
  }
  deleteVendor: {
    type: 'Vendor'
    args: Record<MutationDeleteVendorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: VendorWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Vendor | null> | prisma.Vendor | null
  }
  deleteManyVendors: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyVendorsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: VendorWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createUser: {
    type: 'User'
    args: Record<MutationCreateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  updateUser: {
    type: 'User'
    args: Record<MutationUpdateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateInput, where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updateManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateManyMutationInput, where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertUser: {
    type: 'User'
    args: Record<MutationUpsertUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput, create: UserCreateInput, update: UserUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  deleteUser: {
    type: 'User'
    args: Record<MutationDeleteUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  deleteManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createLocation: {
    type: 'Location'
    args: Record<MutationCreateLocationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: LocationCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Location> | prisma.Location
  }
  updateLocation: {
    type: 'Location'
    args: Record<MutationUpdateLocationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: LocationUpdateInput, where: LocationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Location | null> | prisma.Location | null
  }
  updateManyLocations: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyLocationsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: LocationUpdateManyMutationInput, where?: LocationWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertLocation: {
    type: 'Location'
    args: Record<MutationUpsertLocationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: LocationWhereUniqueInput, create: LocationCreateInput, update: LocationUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Location> | prisma.Location
  }
  deleteLocation: {
    type: 'Location'
    args: Record<MutationDeleteLocationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: LocationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Location | null> | prisma.Location | null
  }
  deleteManyLocations: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyLocationsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: LocationWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createListing: {
    type: 'Listing'
    args: Record<MutationCreateListingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ListingCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Listing> | prisma.Listing
  }
  updateListing: {
    type: 'Listing'
    args: Record<MutationUpdateListingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ListingUpdateInput, where: ListingWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Listing | null> | prisma.Listing | null
  }
  updateManyListings: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyListingsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ListingUpdateManyMutationInput, where?: ListingWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertListing: {
    type: 'Listing'
    args: Record<MutationUpsertListingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ListingWhereUniqueInput, create: ListingCreateInput, update: ListingUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Listing> | prisma.Listing
  }
  deleteListing: {
    type: 'Listing'
    args: Record<MutationDeleteListingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ListingWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Listing | null> | prisma.Listing | null
  }
  deleteManyListings: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyListingsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ListingWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createPicture: {
    type: 'Picture'
    args: Record<MutationCreatePictureArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PictureCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Picture> | prisma.Picture
  }
  updatePicture: {
    type: 'Picture'
    args: Record<MutationUpdatePictureArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PictureUpdateInput, where: PictureWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Picture | null> | prisma.Picture | null
  }
  updateManyPictures: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyPicturesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PictureUpdateManyMutationInput, where?: PictureWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertPicture: {
    type: 'Picture'
    args: Record<MutationUpsertPictureArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PictureWhereUniqueInput, create: PictureCreateInput, update: PictureUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Picture> | prisma.Picture
  }
  deletePicture: {
    type: 'Picture'
    args: Record<MutationDeletePictureArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PictureWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Picture | null> | prisma.Picture | null
  }
  deleteManyPictures: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyPicturesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: PictureWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createViews: {
    type: 'Views'
    args: Record<MutationCreateViewsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ViewsCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Views> | prisma.Views
  }
  updateViews: {
    type: 'Views'
    args: Record<MutationUpdateViewsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ViewsUpdateInput, where: ViewsWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Views | null> | prisma.Views | null
  }
  updateManyViewses: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyViewsesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ViewsUpdateManyMutationInput, where?: ViewsWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertViews: {
    type: 'Views'
    args: Record<MutationUpsertViewsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ViewsWhereUniqueInput, create: ViewsCreateInput, update: ViewsUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Views> | prisma.Views
  }
  deleteViews: {
    type: 'Views'
    args: Record<MutationDeleteViewsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ViewsWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Views | null> | prisma.Views | null
  }
  deleteManyViewses: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyViewsesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ViewsWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createReview: {
    type: 'Review'
    args: Record<MutationCreateReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ReviewCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review> | prisma.Review
  }
  updateReview: {
    type: 'Review'
    args: Record<MutationUpdateReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ReviewUpdateInput, where: ReviewWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review | null> | prisma.Review | null
  }
  updateManyReviews: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyReviewsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ReviewUpdateManyMutationInput, where?: ReviewWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertReview: {
    type: 'Review'
    args: Record<MutationUpsertReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ReviewWhereUniqueInput, create: ReviewCreateInput, update: ReviewUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review> | prisma.Review
  }
  deleteReview: {
    type: 'Review'
    args: Record<MutationDeleteReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ReviewWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review | null> | prisma.Review | null
  }
  deleteManyReviews: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyReviewsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ReviewWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createBooking: {
    type: 'Booking'
    args: Record<MutationCreateBookingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BookingCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Booking> | prisma.Booking
  }
  updateBooking: {
    type: 'Booking'
    args: Record<MutationUpdateBookingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BookingUpdateInput, where: BookingWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Booking | null> | prisma.Booking | null
  }
  updateManyBookings: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyBookingsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BookingUpdateManyMutationInput, where?: BookingWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertBooking: {
    type: 'Booking'
    args: Record<MutationUpsertBookingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: BookingWhereUniqueInput, create: BookingCreateInput, update: BookingUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Booking> | prisma.Booking
  }
  deleteBooking: {
    type: 'Booking'
    args: Record<MutationDeleteBookingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: BookingWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Booking | null> | prisma.Booking | null
  }
  deleteManyBookings: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyBookingsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: BookingWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createPayment: {
    type: 'Payment'
    args: Record<MutationCreatePaymentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PaymentCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Payment> | prisma.Payment
  }
  updatePayment: {
    type: 'Payment'
    args: Record<MutationUpdatePaymentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PaymentUpdateInput, where: PaymentWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Payment | null> | prisma.Payment | null
  }
  updateManyPayments: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyPaymentsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PaymentUpdateManyMutationInput, where?: PaymentWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertPayment: {
    type: 'Payment'
    args: Record<MutationUpsertPaymentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PaymentWhereUniqueInput, create: PaymentCreateInput, update: PaymentUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Payment> | prisma.Payment
  }
  deletePayment: {
    type: 'Payment'
    args: Record<MutationDeletePaymentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PaymentWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Payment | null> | prisma.Payment | null
  }
  deleteManyPayments: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyPaymentsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: PaymentWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createPaymentAccount: {
    type: 'PaymentAccount'
    args: Record<MutationCreatePaymentAccountArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PaymentAccountCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentAccount> | prisma.PaymentAccount
  }
  updatePaymentAccount: {
    type: 'PaymentAccount'
    args: Record<MutationUpdatePaymentAccountArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PaymentAccountUpdateInput, where: PaymentAccountWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentAccount | null> | prisma.PaymentAccount | null
  }
  updateManyPaymentAccounts: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyPaymentAccountsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PaymentAccountUpdateManyMutationInput, where?: PaymentAccountWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertPaymentAccount: {
    type: 'PaymentAccount'
    args: Record<MutationUpsertPaymentAccountArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PaymentAccountWhereUniqueInput, create: PaymentAccountCreateInput, update: PaymentAccountUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentAccount> | prisma.PaymentAccount
  }
  deletePaymentAccount: {
    type: 'PaymentAccount'
    args: Record<MutationDeletePaymentAccountArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PaymentAccountWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentAccount | null> | prisma.PaymentAccount | null
  }
  deleteManyPaymentAccounts: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyPaymentAccountsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: PaymentAccountWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createsavedList: {
    type: 'savedList'
    args: Record<MutationCreatesavedListArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: savedListCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.savedList> | prisma.savedList
  }
  updatesavedList: {
    type: 'savedList'
    args: Record<MutationUpdatesavedListArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: savedListUpdateInput, where: savedListWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.savedList | null> | prisma.savedList | null
  }
  upsertsavedList: {
    type: 'savedList'
    args: Record<MutationUpsertsavedListArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: savedListWhereUniqueInput, create: savedListCreateInput, update: savedListUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.savedList> | prisma.savedList
  }
  deletesavedList: {
    type: 'savedList'
    args: Record<MutationDeletesavedListArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: savedListWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.savedList | null> | prisma.savedList | null
  }
  deleteManysavedLists: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManysavedListsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: savedListWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}
  

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type BatchPayloadFields =
  | 'count'



  

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: 'vendor', args?: SubscriptionVendorArgs[] | false, alias?: string  } 
  | { name: 'user', args?: SubscriptionUserArgs[] | false, alias?: string  } 
  | { name: 'location', args?: SubscriptionLocationArgs[] | false, alias?: string  } 
  | { name: 'listing', args?: SubscriptionListingArgs[] | false, alias?: string  } 
  | { name: 'picture', args?: SubscriptionPictureArgs[] | false, alias?: string  } 
  | { name: 'views', args?: SubscriptionViewsArgs[] | false, alias?: string  } 
  | { name: 'review', args?: SubscriptionReviewArgs[] | false, alias?: string  } 
  | { name: 'booking', args?: SubscriptionBookingArgs[] | false, alias?: string  } 
  | { name: 'payment', args?: SubscriptionPaymentArgs[] | false, alias?: string  } 
  | { name: 'paymentAccount', args?: SubscriptionPaymentAccountArgs[] | false, alias?: string  } 
  | { name: 'savedList', args?: SubscriptionSavedListArgs[] | false, alias?: string  } 

type SubscriptionFields =
  | 'vendor'
  | 'user'
  | 'location'
  | 'listing'
  | 'picture'
  | 'views'
  | 'review'
  | 'booking'
  | 'payment'
  | 'paymentAccount'
  | 'savedList'


type SubscriptionVendorArgs =
  | 'where'
type SubscriptionUserArgs =
  | 'where'
type SubscriptionLocationArgs =
  | 'where'
type SubscriptionListingArgs =
  | 'where'
type SubscriptionPictureArgs =
  | 'where'
type SubscriptionViewsArgs =
  | 'where'
type SubscriptionReviewArgs =
  | 'where'
type SubscriptionBookingArgs =
  | 'where'
type SubscriptionPaymentArgs =
  | 'where'
type SubscriptionPaymentAccountArgs =
  | 'where'
type SubscriptionSavedListArgs =
  | 'where'
  

export interface SubscriptionFieldDetails {
  vendor: {
    type: 'VendorSubscriptionPayload'
    args: Record<SubscriptionVendorArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: VendorSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VendorSubscriptionPayload | null> | prisma.VendorSubscriptionPayload | null
  }
  user: {
    type: 'UserSubscriptionPayload'
    args: Record<SubscriptionUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: UserSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserSubscriptionPayload | null> | prisma.UserSubscriptionPayload | null
  }
  location: {
    type: 'LocationSubscriptionPayload'
    args: Record<SubscriptionLocationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: LocationSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LocationSubscriptionPayload | null> | prisma.LocationSubscriptionPayload | null
  }
  listing: {
    type: 'ListingSubscriptionPayload'
    args: Record<SubscriptionListingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ListingSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ListingSubscriptionPayload | null> | prisma.ListingSubscriptionPayload | null
  }
  picture: {
    type: 'PictureSubscriptionPayload'
    args: Record<SubscriptionPictureArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: PictureSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PictureSubscriptionPayload | null> | prisma.PictureSubscriptionPayload | null
  }
  views: {
    type: 'ViewsSubscriptionPayload'
    args: Record<SubscriptionViewsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ViewsSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ViewsSubscriptionPayload | null> | prisma.ViewsSubscriptionPayload | null
  }
  review: {
    type: 'ReviewSubscriptionPayload'
    args: Record<SubscriptionReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ReviewSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ReviewSubscriptionPayload | null> | prisma.ReviewSubscriptionPayload | null
  }
  booking: {
    type: 'BookingSubscriptionPayload'
    args: Record<SubscriptionBookingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: BookingSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BookingSubscriptionPayload | null> | prisma.BookingSubscriptionPayload | null
  }
  payment: {
    type: 'PaymentSubscriptionPayload'
    args: Record<SubscriptionPaymentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: PaymentSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentSubscriptionPayload | null> | prisma.PaymentSubscriptionPayload | null
  }
  paymentAccount: {
    type: 'PaymentAccountSubscriptionPayload'
    args: Record<SubscriptionPaymentAccountArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: PaymentAccountSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentAccountSubscriptionPayload | null> | prisma.PaymentAccountSubscriptionPayload | null
  }
  savedList: {
    type: 'savedListSubscriptionPayload'
    args: Record<SubscriptionSavedListArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: savedListSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.savedListSubscriptionPayload | null> | prisma.savedListSubscriptionPayload | null
  }
}
  

// Types for VendorSubscriptionPayload

type VendorSubscriptionPayloadObject =
  | VendorSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type VendorSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface VendorSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"VendorSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Vendor'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"VendorSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Vendor | null> | prisma.Vendor | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'VendorPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"VendorSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VendorPreviousValues | null> | prisma.VendorPreviousValues | null
  }
}
  

// Types for VendorPreviousValues

type VendorPreviousValuesObject =
  | VendorPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'firstName', args?: [] | false, alias?: string  } 
  | { name: 'lastName', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'vendorType', args?: [] | false, alias?: string  } 

type VendorPreviousValuesFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'firstName'
  | 'lastName'
  | 'email'
  | 'password'
  | 'phone'
  | 'vendorType'



  

export interface VendorPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  firstName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lastName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  vendorType: {
    type: 'VENDOR_TYPE'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"VendorPreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.VENDOR_TYPE | null> | prisma.VENDOR_TYPE | null
  }
}
  

// Types for UserSubscriptionPayload

type UserSubscriptionPayloadObject =
  | UserSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type UserSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface UserSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'UserPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPreviousValues | null> | prisma.UserPreviousValues | null
  }
}
  

// Types for UserPreviousValues

type UserPreviousValuesObject =
  | UserPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'firstName', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'lastName', args?: [] | false, alias?: string  } 
  | { name: 'photoUrl', args?: [] | false, alias?: string  } 

type UserPreviousValuesFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'email'
  | 'firstName'
  | 'phone'
  | 'password'
  | 'lastName'
  | 'photoUrl'



  

export interface UserPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  firstName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lastName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  photoUrl: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for LocationSubscriptionPayload

type LocationSubscriptionPayloadObject =
  | LocationSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type LocationSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface LocationSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"LocationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Location'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"LocationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Location | null> | prisma.Location | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'LocationPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"LocationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LocationPreviousValues | null> | prisma.LocationPreviousValues | null
  }
}
  

// Types for LocationPreviousValues

type LocationPreviousValuesObject =
  | LocationPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'lat', args?: [] | false, alias?: string  } 
  | { name: 'lng', args?: [] | false, alias?: string  } 
  | { name: 'directions', args?: [] | false, alias?: string  } 

type LocationPreviousValuesFields =
  | 'id'
  | 'lat'
  | 'lng'
  | 'directions'



  

export interface LocationPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lat: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lng: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  directions: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ListingSubscriptionPayload

type ListingSubscriptionPayloadObject =
  | ListingSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ListingSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ListingSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ListingSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Listing'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ListingSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Listing | null> | prisma.Listing | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ListingPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ListingSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ListingPreviousValues | null> | prisma.ListingPreviousValues | null
  }
}
  

// Types for ListingPreviousValues

type ListingPreviousValuesObject =
  | ListingPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'maxGuests', args?: [] | false, alias?: string  } 
  | { name: 'pricePerPlate', args?: [] | false, alias?: string  } 

type ListingPreviousValuesFields =
  | 'id'
  | 'title'
  | 'description'
  | 'createdAt'
  | 'updatedAt'
  | 'maxGuests'
  | 'pricePerPlate'



  

export interface ListingPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  maxGuests: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  pricePerPlate: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PictureSubscriptionPayload

type PictureSubscriptionPayloadObject =
  | PictureSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type PictureSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface PictureSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PictureSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Picture'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PictureSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Picture | null> | prisma.Picture | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'PicturePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PictureSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PicturePreviousValues | null> | prisma.PicturePreviousValues | null
  }
}
  

// Types for PicturePreviousValues

type PicturePreviousValuesObject =
  | PicturePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type PicturePreviousValuesFields =
  | 'id'
  | 'url'



  

export interface PicturePreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ViewsSubscriptionPayload

type ViewsSubscriptionPayloadObject =
  | ViewsSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ViewsSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ViewsSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ViewsSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Views'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ViewsSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Views | null> | prisma.Views | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ViewsPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ViewsSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ViewsPreviousValues | null> | prisma.ViewsPreviousValues | null
  }
}
  

// Types for ViewsPreviousValues

type ViewsPreviousValuesObject =
  | ViewsPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'lastWeek', args?: [] | false, alias?: string  } 

type ViewsPreviousValuesFields =
  | 'id'
  | 'lastWeek'



  

export interface ViewsPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lastWeek: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ReviewSubscriptionPayload

type ReviewSubscriptionPayloadObject =
  | ReviewSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ReviewSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ReviewSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ReviewSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Review'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ReviewSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review | null> | prisma.Review | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ReviewPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ReviewSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ReviewPreviousValues | null> | prisma.ReviewPreviousValues | null
  }
}
  

// Types for ReviewPreviousValues

type ReviewPreviousValuesObject =
  | ReviewPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'comment', args?: [] | false, alias?: string  } 
  | { name: 'stars', args?: [] | false, alias?: string  } 

type ReviewPreviousValuesFields =
  | 'id'
  | 'createdAt'
  | 'title'
  | 'comment'
  | 'stars'



  

export interface ReviewPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  comment: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  stars: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for BookingSubscriptionPayload

type BookingSubscriptionPayloadObject =
  | BookingSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type BookingSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface BookingSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BookingSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Booking'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BookingSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Booking | null> | prisma.Booking | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'BookingPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BookingSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BookingPreviousValues | null> | prisma.BookingPreviousValues | null
  }
}
  

// Types for BookingPreviousValues

type BookingPreviousValuesObject =
  | BookingPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'occasionDate', args?: [] | false, alias?: string  } 
  | { name: 'isFulfilled', args?: [] | false, alias?: string  } 

type BookingPreviousValuesFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'occasionDate'
  | 'isFulfilled'



  

export interface BookingPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  occasionDate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  isFulfilled: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for PaymentSubscriptionPayload

type PaymentSubscriptionPayloadObject =
  | PaymentSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type PaymentSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface PaymentSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PaymentSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Payment'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PaymentSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Payment | null> | prisma.Payment | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'PaymentPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PaymentSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentPreviousValues | null> | prisma.PaymentPreviousValues | null
  }
}
  

// Types for PaymentPreviousValues

type PaymentPreviousValuesObject =
  | PaymentPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'serviceFee', args?: [] | false, alias?: string  } 
  | { name: 'price', args?: [] | false, alias?: string  } 
  | { name: 'totalPrice', args?: [] | false, alias?: string  } 

type PaymentPreviousValuesFields =
  | 'id'
  | 'createdAt'
  | 'serviceFee'
  | 'price'
  | 'totalPrice'



  

export interface PaymentPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  serviceFee: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  price: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  totalPrice: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PaymentAccountSubscriptionPayload

type PaymentAccountSubscriptionPayloadObject =
  | PaymentAccountSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type PaymentAccountSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface PaymentAccountSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PaymentAccountSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'PaymentAccount'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PaymentAccountSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentAccount | null> | prisma.PaymentAccount | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'PaymentAccountPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PaymentAccountSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentAccountPreviousValues | null> | prisma.PaymentAccountPreviousValues | null
  }
}
  

// Types for PaymentAccountPreviousValues

type PaymentAccountPreviousValuesObject =
  | PaymentAccountPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'type', args?: [] | false, alias?: string  } 

type PaymentAccountPreviousValuesFields =
  | 'id'
  | 'createdAt'
  | 'type'



  

export interface PaymentAccountPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  type: {
    type: 'PAYMENT_PROVIDER'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PaymentAccountPreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PAYMENT_PROVIDER | null> | prisma.PAYMENT_PROVIDER | null
  }
}
  

// Types for savedListSubscriptionPayload

type savedListSubscriptionPayloadObject =
  | savedListSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type savedListSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface savedListSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"savedListSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'savedList'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"savedListSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.savedList | null> | prisma.savedList | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'savedListPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"savedListSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.savedListPreviousValues | null> | prisma.savedListPreviousValues | null
  }
}
  

// Types for savedListPreviousValues

type savedListPreviousValuesObject =
  | savedListPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 

type savedListPreviousValuesFields =
  | 'id'



  

export interface savedListPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  


export interface VendorWhereUniqueInput {
  id?: string | null
  email?: string | null
}
export type VendorWhereUniqueInputInputObject =
  | Extract<keyof VendorWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  
export interface ListingWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  maxGuests?: number | null
  maxGuests_not?: number | null
  maxGuests_in?: number[]
  maxGuests_not_in?: number[]
  maxGuests_lt?: number | null
  maxGuests_lte?: number | null
  maxGuests_gt?: number | null
  maxGuests_gte?: number | null
  reviews_every?: ReviewWhereInput | null
  reviews_some?: ReviewWhereInput | null
  reviews_none?: ReviewWhereInput | null
  vendor?: VendorWhereInput | null
  pricePerPlate?: number | null
  pricePerPlate_not?: number | null
  pricePerPlate_in?: number[]
  pricePerPlate_not_in?: number[]
  pricePerPlate_lt?: number | null
  pricePerPlate_lte?: number | null
  pricePerPlate_gt?: number | null
  pricePerPlate_gte?: number | null
  views?: ViewsWhereInput | null
  bookings_every?: BookingWhereInput | null
  bookings_some?: BookingWhereInput | null
  bookings_none?: BookingWhereInput | null
  photos_every?: PictureWhereInput | null
  photos_some?: PictureWhereInput | null
  photos_none?: PictureWhereInput | null
  AND?: ListingWhereInput[]
  OR?: ListingWhereInput[]
  NOT?: ListingWhereInput[]
}
export type ListingWhereInputInputObject =
  | Extract<keyof ListingWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_not', alias?: string  } 
  | { name: 'title_in', alias?: string  } 
  | { name: 'title_not_in', alias?: string  } 
  | { name: 'title_lt', alias?: string  } 
  | { name: 'title_lte', alias?: string  } 
  | { name: 'title_gt', alias?: string  } 
  | { name: 'title_gte', alias?: string  } 
  | { name: 'title_contains', alias?: string  } 
  | { name: 'title_not_contains', alias?: string  } 
  | { name: 'title_starts_with', alias?: string  } 
  | { name: 'title_not_starts_with', alias?: string  } 
  | { name: 'title_ends_with', alias?: string  } 
  | { name: 'title_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'maxGuests', alias?: string  } 
  | { name: 'maxGuests_not', alias?: string  } 
  | { name: 'maxGuests_in', alias?: string  } 
  | { name: 'maxGuests_not_in', alias?: string  } 
  | { name: 'maxGuests_lt', alias?: string  } 
  | { name: 'maxGuests_lte', alias?: string  } 
  | { name: 'maxGuests_gt', alias?: string  } 
  | { name: 'maxGuests_gte', alias?: string  } 
  | { name: 'reviews_every', alias?: string  } 
  | { name: 'reviews_some', alias?: string  } 
  | { name: 'reviews_none', alias?: string  } 
  | { name: 'vendor', alias?: string  } 
  | { name: 'pricePerPlate', alias?: string  } 
  | { name: 'pricePerPlate_not', alias?: string  } 
  | { name: 'pricePerPlate_in', alias?: string  } 
  | { name: 'pricePerPlate_not_in', alias?: string  } 
  | { name: 'pricePerPlate_lt', alias?: string  } 
  | { name: 'pricePerPlate_lte', alias?: string  } 
  | { name: 'pricePerPlate_gt', alias?: string  } 
  | { name: 'pricePerPlate_gte', alias?: string  } 
  | { name: 'views', alias?: string  } 
  | { name: 'bookings_every', alias?: string  } 
  | { name: 'bookings_some', alias?: string  } 
  | { name: 'bookings_none', alias?: string  } 
  | { name: 'photos_every', alias?: string  } 
  | { name: 'photos_some', alias?: string  } 
  | { name: 'photos_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ReviewWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  comment?: string | null
  comment_not?: string | null
  comment_in?: string[]
  comment_not_in?: string[]
  comment_lt?: string | null
  comment_lte?: string | null
  comment_gt?: string | null
  comment_gte?: string | null
  comment_contains?: string | null
  comment_not_contains?: string | null
  comment_starts_with?: string | null
  comment_not_starts_with?: string | null
  comment_ends_with?: string | null
  comment_not_ends_with?: string | null
  stars?: number | null
  stars_not?: number | null
  stars_in?: number[]
  stars_not_in?: number[]
  stars_lt?: number | null
  stars_lte?: number | null
  stars_gt?: number | null
  stars_gte?: number | null
  listing?: ListingWhereInput | null
  AND?: ReviewWhereInput[]
  OR?: ReviewWhereInput[]
  NOT?: ReviewWhereInput[]
}
export type ReviewWhereInputInputObject =
  | Extract<keyof ReviewWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_not', alias?: string  } 
  | { name: 'title_in', alias?: string  } 
  | { name: 'title_not_in', alias?: string  } 
  | { name: 'title_lt', alias?: string  } 
  | { name: 'title_lte', alias?: string  } 
  | { name: 'title_gt', alias?: string  } 
  | { name: 'title_gte', alias?: string  } 
  | { name: 'title_contains', alias?: string  } 
  | { name: 'title_not_contains', alias?: string  } 
  | { name: 'title_starts_with', alias?: string  } 
  | { name: 'title_not_starts_with', alias?: string  } 
  | { name: 'title_ends_with', alias?: string  } 
  | { name: 'title_not_ends_with', alias?: string  } 
  | { name: 'comment', alias?: string  } 
  | { name: 'comment_not', alias?: string  } 
  | { name: 'comment_in', alias?: string  } 
  | { name: 'comment_not_in', alias?: string  } 
  | { name: 'comment_lt', alias?: string  } 
  | { name: 'comment_lte', alias?: string  } 
  | { name: 'comment_gt', alias?: string  } 
  | { name: 'comment_gte', alias?: string  } 
  | { name: 'comment_contains', alias?: string  } 
  | { name: 'comment_not_contains', alias?: string  } 
  | { name: 'comment_starts_with', alias?: string  } 
  | { name: 'comment_not_starts_with', alias?: string  } 
  | { name: 'comment_ends_with', alias?: string  } 
  | { name: 'comment_not_ends_with', alias?: string  } 
  | { name: 'stars', alias?: string  } 
  | { name: 'stars_not', alias?: string  } 
  | { name: 'stars_in', alias?: string  } 
  | { name: 'stars_not_in', alias?: string  } 
  | { name: 'stars_lt', alias?: string  } 
  | { name: 'stars_lte', alias?: string  } 
  | { name: 'stars_gt', alias?: string  } 
  | { name: 'stars_gte', alias?: string  } 
  | { name: 'listing', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface VendorWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  firstName?: string | null
  firstName_not?: string | null
  firstName_in?: string[]
  firstName_not_in?: string[]
  firstName_lt?: string | null
  firstName_lte?: string | null
  firstName_gt?: string | null
  firstName_gte?: string | null
  firstName_contains?: string | null
  firstName_not_contains?: string | null
  firstName_starts_with?: string | null
  firstName_not_starts_with?: string | null
  firstName_ends_with?: string | null
  firstName_not_ends_with?: string | null
  lastName?: string | null
  lastName_not?: string | null
  lastName_in?: string[]
  lastName_not_in?: string[]
  lastName_lt?: string | null
  lastName_lte?: string | null
  lastName_gt?: string | null
  lastName_gte?: string | null
  lastName_contains?: string | null
  lastName_not_contains?: string | null
  lastName_starts_with?: string | null
  lastName_not_starts_with?: string | null
  lastName_ends_with?: string | null
  lastName_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  password?: string | null
  password_not?: string | null
  password_in?: string[]
  password_not_in?: string[]
  password_lt?: string | null
  password_lte?: string | null
  password_gt?: string | null
  password_gte?: string | null
  password_contains?: string | null
  password_not_contains?: string | null
  password_starts_with?: string | null
  password_not_starts_with?: string | null
  password_ends_with?: string | null
  password_not_ends_with?: string | null
  phone?: string | null
  phone_not?: string | null
  phone_in?: string[]
  phone_not_in?: string[]
  phone_lt?: string | null
  phone_lte?: string | null
  phone_gt?: string | null
  phone_gte?: string | null
  phone_contains?: string | null
  phone_not_contains?: string | null
  phone_starts_with?: string | null
  phone_not_starts_with?: string | null
  phone_ends_with?: string | null
  phone_not_ends_with?: string | null
  listings_every?: ListingWhereInput | null
  listings_some?: ListingWhereInput | null
  listings_none?: ListingWhereInput | null
  vendorType?: prisma.VENDOR_TYPE | null
  vendorType_not?: prisma.VENDOR_TYPE | null
  vendorType_in?: prisma.VENDOR_TYPE[]
  vendorType_not_in?: prisma.VENDOR_TYPE[]
  AND?: VendorWhereInput[]
  OR?: VendorWhereInput[]
  NOT?: VendorWhereInput[]
}
export type VendorWhereInputInputObject =
  | Extract<keyof VendorWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'firstName_not', alias?: string  } 
  | { name: 'firstName_in', alias?: string  } 
  | { name: 'firstName_not_in', alias?: string  } 
  | { name: 'firstName_lt', alias?: string  } 
  | { name: 'firstName_lte', alias?: string  } 
  | { name: 'firstName_gt', alias?: string  } 
  | { name: 'firstName_gte', alias?: string  } 
  | { name: 'firstName_contains', alias?: string  } 
  | { name: 'firstName_not_contains', alias?: string  } 
  | { name: 'firstName_starts_with', alias?: string  } 
  | { name: 'firstName_not_starts_with', alias?: string  } 
  | { name: 'firstName_ends_with', alias?: string  } 
  | { name: 'firstName_not_ends_with', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'lastName_not', alias?: string  } 
  | { name: 'lastName_in', alias?: string  } 
  | { name: 'lastName_not_in', alias?: string  } 
  | { name: 'lastName_lt', alias?: string  } 
  | { name: 'lastName_lte', alias?: string  } 
  | { name: 'lastName_gt', alias?: string  } 
  | { name: 'lastName_gte', alias?: string  } 
  | { name: 'lastName_contains', alias?: string  } 
  | { name: 'lastName_not_contains', alias?: string  } 
  | { name: 'lastName_starts_with', alias?: string  } 
  | { name: 'lastName_not_starts_with', alias?: string  } 
  | { name: 'lastName_ends_with', alias?: string  } 
  | { name: 'lastName_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'password_not', alias?: string  } 
  | { name: 'password_in', alias?: string  } 
  | { name: 'password_not_in', alias?: string  } 
  | { name: 'password_lt', alias?: string  } 
  | { name: 'password_lte', alias?: string  } 
  | { name: 'password_gt', alias?: string  } 
  | { name: 'password_gte', alias?: string  } 
  | { name: 'password_contains', alias?: string  } 
  | { name: 'password_not_contains', alias?: string  } 
  | { name: 'password_starts_with', alias?: string  } 
  | { name: 'password_not_starts_with', alias?: string  } 
  | { name: 'password_ends_with', alias?: string  } 
  | { name: 'password_not_ends_with', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone_not', alias?: string  } 
  | { name: 'phone_in', alias?: string  } 
  | { name: 'phone_not_in', alias?: string  } 
  | { name: 'phone_lt', alias?: string  } 
  | { name: 'phone_lte', alias?: string  } 
  | { name: 'phone_gt', alias?: string  } 
  | { name: 'phone_gte', alias?: string  } 
  | { name: 'phone_contains', alias?: string  } 
  | { name: 'phone_not_contains', alias?: string  } 
  | { name: 'phone_starts_with', alias?: string  } 
  | { name: 'phone_not_starts_with', alias?: string  } 
  | { name: 'phone_ends_with', alias?: string  } 
  | { name: 'phone_not_ends_with', alias?: string  } 
  | { name: 'listings_every', alias?: string  } 
  | { name: 'listings_some', alias?: string  } 
  | { name: 'listings_none', alias?: string  } 
  | { name: 'vendorType', alias?: string  } 
  | { name: 'vendorType_not', alias?: string  } 
  | { name: 'vendorType_in', alias?: string  } 
  | { name: 'vendorType_not_in', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ViewsWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  lastWeek?: number | null
  lastWeek_not?: number | null
  lastWeek_in?: number[]
  lastWeek_not_in?: number[]
  lastWeek_lt?: number | null
  lastWeek_lte?: number | null
  lastWeek_gt?: number | null
  lastWeek_gte?: number | null
  listing?: ListingWhereInput | null
  AND?: ViewsWhereInput[]
  OR?: ViewsWhereInput[]
  NOT?: ViewsWhereInput[]
}
export type ViewsWhereInputInputObject =
  | Extract<keyof ViewsWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'lastWeek', alias?: string  } 
  | { name: 'lastWeek_not', alias?: string  } 
  | { name: 'lastWeek_in', alias?: string  } 
  | { name: 'lastWeek_not_in', alias?: string  } 
  | { name: 'lastWeek_lt', alias?: string  } 
  | { name: 'lastWeek_lte', alias?: string  } 
  | { name: 'lastWeek_gt', alias?: string  } 
  | { name: 'lastWeek_gte', alias?: string  } 
  | { name: 'listing', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface BookingWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  bookee?: UserWhereInput | null
  listing?: ListingWhereInput | null
  occasionDate?: string | null
  occasionDate_not?: string | null
  occasionDate_in?: string[]
  occasionDate_not_in?: string[]
  occasionDate_lt?: string | null
  occasionDate_lte?: string | null
  occasionDate_gt?: string | null
  occasionDate_gte?: string | null
  location?: LocationWhereInput | null
  payment?: PaymentWhereInput | null
  isFulfilled?: boolean | null
  isFulfilled_not?: boolean | null
  AND?: BookingWhereInput[]
  OR?: BookingWhereInput[]
  NOT?: BookingWhereInput[]
}
export type BookingWhereInputInputObject =
  | Extract<keyof BookingWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'bookee', alias?: string  } 
  | { name: 'listing', alias?: string  } 
  | { name: 'occasionDate', alias?: string  } 
  | { name: 'occasionDate_not', alias?: string  } 
  | { name: 'occasionDate_in', alias?: string  } 
  | { name: 'occasionDate_not_in', alias?: string  } 
  | { name: 'occasionDate_lt', alias?: string  } 
  | { name: 'occasionDate_lte', alias?: string  } 
  | { name: 'occasionDate_gt', alias?: string  } 
  | { name: 'occasionDate_gte', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'isFulfilled', alias?: string  } 
  | { name: 'isFulfilled_not', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  firstName?: string | null
  firstName_not?: string | null
  firstName_in?: string[]
  firstName_not_in?: string[]
  firstName_lt?: string | null
  firstName_lte?: string | null
  firstName_gt?: string | null
  firstName_gte?: string | null
  firstName_contains?: string | null
  firstName_not_contains?: string | null
  firstName_starts_with?: string | null
  firstName_not_starts_with?: string | null
  firstName_ends_with?: string | null
  firstName_not_ends_with?: string | null
  phone?: string | null
  phone_not?: string | null
  phone_in?: string[]
  phone_not_in?: string[]
  phone_lt?: string | null
  phone_lte?: string | null
  phone_gt?: string | null
  phone_gte?: string | null
  phone_contains?: string | null
  phone_not_contains?: string | null
  phone_starts_with?: string | null
  phone_not_starts_with?: string | null
  phone_ends_with?: string | null
  phone_not_ends_with?: string | null
  password?: string | null
  password_not?: string | null
  password_in?: string[]
  password_not_in?: string[]
  password_lt?: string | null
  password_lte?: string | null
  password_gt?: string | null
  password_gte?: string | null
  password_contains?: string | null
  password_not_contains?: string | null
  password_starts_with?: string | null
  password_not_starts_with?: string | null
  password_ends_with?: string | null
  password_not_ends_with?: string | null
  lastName?: string | null
  lastName_not?: string | null
  lastName_in?: string[]
  lastName_not_in?: string[]
  lastName_lt?: string | null
  lastName_lte?: string | null
  lastName_gt?: string | null
  lastName_gte?: string | null
  lastName_contains?: string | null
  lastName_not_contains?: string | null
  lastName_starts_with?: string | null
  lastName_not_starts_with?: string | null
  lastName_ends_with?: string | null
  lastName_not_ends_with?: string | null
  address?: LocationWhereInput | null
  saved?: savedListWhereInput | null
  photoUrl?: string | null
  photoUrl_not?: string | null
  photoUrl_in?: string[]
  photoUrl_not_in?: string[]
  photoUrl_lt?: string | null
  photoUrl_lte?: string | null
  photoUrl_gt?: string | null
  photoUrl_gte?: string | null
  photoUrl_contains?: string | null
  photoUrl_not_contains?: string | null
  photoUrl_starts_with?: string | null
  photoUrl_not_starts_with?: string | null
  photoUrl_ends_with?: string | null
  photoUrl_not_ends_with?: string | null
  AND?: UserWhereInput[]
  OR?: UserWhereInput[]
  NOT?: UserWhereInput[]
}
export type UserWhereInputInputObject =
  | Extract<keyof UserWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'firstName_not', alias?: string  } 
  | { name: 'firstName_in', alias?: string  } 
  | { name: 'firstName_not_in', alias?: string  } 
  | { name: 'firstName_lt', alias?: string  } 
  | { name: 'firstName_lte', alias?: string  } 
  | { name: 'firstName_gt', alias?: string  } 
  | { name: 'firstName_gte', alias?: string  } 
  | { name: 'firstName_contains', alias?: string  } 
  | { name: 'firstName_not_contains', alias?: string  } 
  | { name: 'firstName_starts_with', alias?: string  } 
  | { name: 'firstName_not_starts_with', alias?: string  } 
  | { name: 'firstName_ends_with', alias?: string  } 
  | { name: 'firstName_not_ends_with', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone_not', alias?: string  } 
  | { name: 'phone_in', alias?: string  } 
  | { name: 'phone_not_in', alias?: string  } 
  | { name: 'phone_lt', alias?: string  } 
  | { name: 'phone_lte', alias?: string  } 
  | { name: 'phone_gt', alias?: string  } 
  | { name: 'phone_gte', alias?: string  } 
  | { name: 'phone_contains', alias?: string  } 
  | { name: 'phone_not_contains', alias?: string  } 
  | { name: 'phone_starts_with', alias?: string  } 
  | { name: 'phone_not_starts_with', alias?: string  } 
  | { name: 'phone_ends_with', alias?: string  } 
  | { name: 'phone_not_ends_with', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'password_not', alias?: string  } 
  | { name: 'password_in', alias?: string  } 
  | { name: 'password_not_in', alias?: string  } 
  | { name: 'password_lt', alias?: string  } 
  | { name: 'password_lte', alias?: string  } 
  | { name: 'password_gt', alias?: string  } 
  | { name: 'password_gte', alias?: string  } 
  | { name: 'password_contains', alias?: string  } 
  | { name: 'password_not_contains', alias?: string  } 
  | { name: 'password_starts_with', alias?: string  } 
  | { name: 'password_not_starts_with', alias?: string  } 
  | { name: 'password_ends_with', alias?: string  } 
  | { name: 'password_not_ends_with', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'lastName_not', alias?: string  } 
  | { name: 'lastName_in', alias?: string  } 
  | { name: 'lastName_not_in', alias?: string  } 
  | { name: 'lastName_lt', alias?: string  } 
  | { name: 'lastName_lte', alias?: string  } 
  | { name: 'lastName_gt', alias?: string  } 
  | { name: 'lastName_gte', alias?: string  } 
  | { name: 'lastName_contains', alias?: string  } 
  | { name: 'lastName_not_contains', alias?: string  } 
  | { name: 'lastName_starts_with', alias?: string  } 
  | { name: 'lastName_not_starts_with', alias?: string  } 
  | { name: 'lastName_ends_with', alias?: string  } 
  | { name: 'lastName_not_ends_with', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'saved', alias?: string  } 
  | { name: 'photoUrl', alias?: string  } 
  | { name: 'photoUrl_not', alias?: string  } 
  | { name: 'photoUrl_in', alias?: string  } 
  | { name: 'photoUrl_not_in', alias?: string  } 
  | { name: 'photoUrl_lt', alias?: string  } 
  | { name: 'photoUrl_lte', alias?: string  } 
  | { name: 'photoUrl_gt', alias?: string  } 
  | { name: 'photoUrl_gte', alias?: string  } 
  | { name: 'photoUrl_contains', alias?: string  } 
  | { name: 'photoUrl_not_contains', alias?: string  } 
  | { name: 'photoUrl_starts_with', alias?: string  } 
  | { name: 'photoUrl_not_starts_with', alias?: string  } 
  | { name: 'photoUrl_ends_with', alias?: string  } 
  | { name: 'photoUrl_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface LocationWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  lat?: number | null
  lat_not?: number | null
  lat_in?: number[]
  lat_not_in?: number[]
  lat_lt?: number | null
  lat_lte?: number | null
  lat_gt?: number | null
  lat_gte?: number | null
  lng?: number | null
  lng_not?: number | null
  lng_in?: number[]
  lng_not_in?: number[]
  lng_lt?: number | null
  lng_lte?: number | null
  lng_gt?: number | null
  lng_gte?: number | null
  user?: UserWhereInput | null
  directions?: string | null
  directions_not?: string | null
  directions_in?: string[]
  directions_not_in?: string[]
  directions_lt?: string | null
  directions_lte?: string | null
  directions_gt?: string | null
  directions_gte?: string | null
  directions_contains?: string | null
  directions_not_contains?: string | null
  directions_starts_with?: string | null
  directions_not_starts_with?: string | null
  directions_ends_with?: string | null
  directions_not_ends_with?: string | null
  AND?: LocationWhereInput[]
  OR?: LocationWhereInput[]
  NOT?: LocationWhereInput[]
}
export type LocationWhereInputInputObject =
  | Extract<keyof LocationWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'lat', alias?: string  } 
  | { name: 'lat_not', alias?: string  } 
  | { name: 'lat_in', alias?: string  } 
  | { name: 'lat_not_in', alias?: string  } 
  | { name: 'lat_lt', alias?: string  } 
  | { name: 'lat_lte', alias?: string  } 
  | { name: 'lat_gt', alias?: string  } 
  | { name: 'lat_gte', alias?: string  } 
  | { name: 'lng', alias?: string  } 
  | { name: 'lng_not', alias?: string  } 
  | { name: 'lng_in', alias?: string  } 
  | { name: 'lng_not_in', alias?: string  } 
  | { name: 'lng_lt', alias?: string  } 
  | { name: 'lng_lte', alias?: string  } 
  | { name: 'lng_gt', alias?: string  } 
  | { name: 'lng_gte', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'directions', alias?: string  } 
  | { name: 'directions_not', alias?: string  } 
  | { name: 'directions_in', alias?: string  } 
  | { name: 'directions_not_in', alias?: string  } 
  | { name: 'directions_lt', alias?: string  } 
  | { name: 'directions_lte', alias?: string  } 
  | { name: 'directions_gt', alias?: string  } 
  | { name: 'directions_gte', alias?: string  } 
  | { name: 'directions_contains', alias?: string  } 
  | { name: 'directions_not_contains', alias?: string  } 
  | { name: 'directions_starts_with', alias?: string  } 
  | { name: 'directions_not_starts_with', alias?: string  } 
  | { name: 'directions_ends_with', alias?: string  } 
  | { name: 'directions_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface savedListWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  listings_every?: ListingWhereInput | null
  listings_some?: ListingWhereInput | null
  listings_none?: ListingWhereInput | null
  AND?: savedListWhereInput[]
  OR?: savedListWhereInput[]
  NOT?: savedListWhereInput[]
}
export type savedListWhereInputInputObject =
  | Extract<keyof savedListWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'listings_every', alias?: string  } 
  | { name: 'listings_some', alias?: string  } 
  | { name: 'listings_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PaymentWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  serviceFee?: number | null
  serviceFee_not?: number | null
  serviceFee_in?: number[]
  serviceFee_not_in?: number[]
  serviceFee_lt?: number | null
  serviceFee_lte?: number | null
  serviceFee_gt?: number | null
  serviceFee_gte?: number | null
  price?: number | null
  price_not?: number | null
  price_in?: number[]
  price_not_in?: number[]
  price_lt?: number | null
  price_lte?: number | null
  price_gt?: number | null
  price_gte?: number | null
  totalPrice?: number | null
  totalPrice_not?: number | null
  totalPrice_in?: number[]
  totalPrice_not_in?: number[]
  totalPrice_lt?: number | null
  totalPrice_lte?: number | null
  totalPrice_gt?: number | null
  totalPrice_gte?: number | null
  booking?: BookingWhereInput | null
  paymentMethod?: PaymentAccountWhereInput | null
  AND?: PaymentWhereInput[]
  OR?: PaymentWhereInput[]
  NOT?: PaymentWhereInput[]
}
export type PaymentWhereInputInputObject =
  | Extract<keyof PaymentWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'serviceFee', alias?: string  } 
  | { name: 'serviceFee_not', alias?: string  } 
  | { name: 'serviceFee_in', alias?: string  } 
  | { name: 'serviceFee_not_in', alias?: string  } 
  | { name: 'serviceFee_lt', alias?: string  } 
  | { name: 'serviceFee_lte', alias?: string  } 
  | { name: 'serviceFee_gt', alias?: string  } 
  | { name: 'serviceFee_gte', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'price_not', alias?: string  } 
  | { name: 'price_in', alias?: string  } 
  | { name: 'price_not_in', alias?: string  } 
  | { name: 'price_lt', alias?: string  } 
  | { name: 'price_lte', alias?: string  } 
  | { name: 'price_gt', alias?: string  } 
  | { name: 'price_gte', alias?: string  } 
  | { name: 'totalPrice', alias?: string  } 
  | { name: 'totalPrice_not', alias?: string  } 
  | { name: 'totalPrice_in', alias?: string  } 
  | { name: 'totalPrice_not_in', alias?: string  } 
  | { name: 'totalPrice_lt', alias?: string  } 
  | { name: 'totalPrice_lte', alias?: string  } 
  | { name: 'totalPrice_gt', alias?: string  } 
  | { name: 'totalPrice_gte', alias?: string  } 
  | { name: 'booking', alias?: string  } 
  | { name: 'paymentMethod', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PaymentAccountWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  type?: prisma.PAYMENT_PROVIDER | null
  type_not?: prisma.PAYMENT_PROVIDER | null
  type_in?: prisma.PAYMENT_PROVIDER[]
  type_not_in?: prisma.PAYMENT_PROVIDER[]
  user?: UserWhereInput | null
  payments_every?: PaymentWhereInput | null
  payments_some?: PaymentWhereInput | null
  payments_none?: PaymentWhereInput | null
  AND?: PaymentAccountWhereInput[]
  OR?: PaymentAccountWhereInput[]
  NOT?: PaymentAccountWhereInput[]
}
export type PaymentAccountWhereInputInputObject =
  | Extract<keyof PaymentAccountWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'type_not', alias?: string  } 
  | { name: 'type_in', alias?: string  } 
  | { name: 'type_not_in', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'payments_every', alias?: string  } 
  | { name: 'payments_some', alias?: string  } 
  | { name: 'payments_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PictureWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  listing?: ListingWhereInput | null
  AND?: PictureWhereInput[]
  OR?: PictureWhereInput[]
  NOT?: PictureWhereInput[]
}
export type PictureWhereInputInputObject =
  | Extract<keyof PictureWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'url_not', alias?: string  } 
  | { name: 'url_in', alias?: string  } 
  | { name: 'url_not_in', alias?: string  } 
  | { name: 'url_lt', alias?: string  } 
  | { name: 'url_lte', alias?: string  } 
  | { name: 'url_gt', alias?: string  } 
  | { name: 'url_gte', alias?: string  } 
  | { name: 'url_contains', alias?: string  } 
  | { name: 'url_not_contains', alias?: string  } 
  | { name: 'url_starts_with', alias?: string  } 
  | { name: 'url_not_starts_with', alias?: string  } 
  | { name: 'url_ends_with', alias?: string  } 
  | { name: 'url_not_ends_with', alias?: string  } 
  | { name: 'listing', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserWhereUniqueInput {
  id?: string | null
  email?: string | null
}
export type UserWhereUniqueInputInputObject =
  | Extract<keyof UserWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  
export interface LocationWhereUniqueInput {
  id?: string | null
}
export type LocationWhereUniqueInputInputObject =
  | Extract<keyof LocationWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface ListingWhereUniqueInput {
  id?: string | null
}
export type ListingWhereUniqueInputInputObject =
  | Extract<keyof ListingWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface PictureWhereUniqueInput {
  id?: string | null
}
export type PictureWhereUniqueInputInputObject =
  | Extract<keyof PictureWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface ViewsWhereUniqueInput {
  id?: string | null
}
export type ViewsWhereUniqueInputInputObject =
  | Extract<keyof ViewsWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface ReviewWhereUniqueInput {
  id?: string | null
}
export type ReviewWhereUniqueInputInputObject =
  | Extract<keyof ReviewWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface BookingWhereUniqueInput {
  id?: string | null
}
export type BookingWhereUniqueInputInputObject =
  | Extract<keyof BookingWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface PaymentWhereUniqueInput {
  id?: string | null
}
export type PaymentWhereUniqueInputInputObject =
  | Extract<keyof PaymentWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface PaymentAccountWhereUniqueInput {
  id?: string | null
}
export type PaymentAccountWhereUniqueInputInputObject =
  | Extract<keyof PaymentAccountWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface savedListWhereUniqueInput {
  id?: string | null
}
export type savedListWhereUniqueInputInputObject =
  | Extract<keyof savedListWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface VendorCreateInput {
  id?: string | null
  firstName?: string
  lastName?: string
  email?: string
  password?: string
  phone?: string
  listings?: ListingCreateManyWithoutVendorInput | null
  vendorType?: prisma.VENDOR_TYPE | null
}
export type VendorCreateInputInputObject =
  | Extract<keyof VendorCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'listings', alias?: string  } 
  | { name: 'vendorType', alias?: string  } 
  
export interface ListingCreateManyWithoutVendorInput {
  create?: ListingCreateWithoutVendorInput[]
  connect?: ListingWhereUniqueInput[]
}
export type ListingCreateManyWithoutVendorInputInputObject =
  | Extract<keyof ListingCreateManyWithoutVendorInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ListingCreateWithoutVendorInput {
  id?: string | null
  title?: string
  description?: string
  maxGuests?: number
  reviews?: ReviewCreateManyWithoutListingInput | null
  pricePerPlate?: number
  views?: ViewsCreateOneWithoutListingInput | null
  bookings?: BookingCreateManyWithoutListingInput | null
  photos?: PictureCreateManyWithoutListingInput | null
}
export type ListingCreateWithoutVendorInputInputObject =
  | Extract<keyof ListingCreateWithoutVendorInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'maxGuests', alias?: string  } 
  | { name: 'reviews', alias?: string  } 
  | { name: 'pricePerPlate', alias?: string  } 
  | { name: 'views', alias?: string  } 
  | { name: 'bookings', alias?: string  } 
  | { name: 'photos', alias?: string  } 
  
export interface ReviewCreateManyWithoutListingInput {
  create?: ReviewCreateWithoutListingInput[]
  connect?: ReviewWhereUniqueInput[]
}
export type ReviewCreateManyWithoutListingInputInputObject =
  | Extract<keyof ReviewCreateManyWithoutListingInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ReviewCreateWithoutListingInput {
  id?: string | null
  title?: string
  comment?: string
  stars?: number
}
export type ReviewCreateWithoutListingInputInputObject =
  | Extract<keyof ReviewCreateWithoutListingInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'comment', alias?: string  } 
  | { name: 'stars', alias?: string  } 
  
export interface ViewsCreateOneWithoutListingInput {
  create?: ViewsCreateWithoutListingInput | null
  connect?: ViewsWhereUniqueInput | null
}
export type ViewsCreateOneWithoutListingInputInputObject =
  | Extract<keyof ViewsCreateOneWithoutListingInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ViewsCreateWithoutListingInput {
  id?: string | null
  lastWeek?: number
}
export type ViewsCreateWithoutListingInputInputObject =
  | Extract<keyof ViewsCreateWithoutListingInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'lastWeek', alias?: string  } 
  
export interface BookingCreateManyWithoutListingInput {
  create?: BookingCreateWithoutListingInput[]
  connect?: BookingWhereUniqueInput[]
}
export type BookingCreateManyWithoutListingInputInputObject =
  | Extract<keyof BookingCreateManyWithoutListingInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BookingCreateWithoutListingInput {
  id?: string | null
  bookee?: UserCreateOneInput
  occasionDate?: string
  location?: LocationCreateOneInput | null
  payment?: PaymentCreateOneWithoutBookingInput | null
  isFulfilled?: boolean | null
}
export type BookingCreateWithoutListingInputInputObject =
  | Extract<keyof BookingCreateWithoutListingInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'bookee', alias?: string  } 
  | { name: 'occasionDate', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'isFulfilled', alias?: string  } 
  
export interface UserCreateOneInput {
  create?: UserCreateInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneInputInputObject =
  | Extract<keyof UserCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateInput {
  id?: string | null
  email?: string
  firstName?: string
  phone?: string | null
  password?: string
  lastName?: string
  address?: LocationCreateOneWithoutUserInput | null
  saved?: savedListCreateOneInput | null
  photoUrl?: string | null
}
export type UserCreateInputInputObject =
  | Extract<keyof UserCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'saved', alias?: string  } 
  | { name: 'photoUrl', alias?: string  } 
  
export interface LocationCreateOneWithoutUserInput {
  create?: LocationCreateWithoutUserInput | null
  connect?: LocationWhereUniqueInput | null
}
export type LocationCreateOneWithoutUserInputInputObject =
  | Extract<keyof LocationCreateOneWithoutUserInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface LocationCreateWithoutUserInput {
  id?: string | null
  lat?: number
  lng?: number
  directions?: string
}
export type LocationCreateWithoutUserInputInputObject =
  | Extract<keyof LocationCreateWithoutUserInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'lat', alias?: string  } 
  | { name: 'lng', alias?: string  } 
  | { name: 'directions', alias?: string  } 
  
export interface savedListCreateOneInput {
  create?: savedListCreateInput | null
  connect?: savedListWhereUniqueInput | null
}
export type savedListCreateOneInputInputObject =
  | Extract<keyof savedListCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface savedListCreateInput {
  id?: string | null
  listings?: ListingCreateManyInput | null
}
export type savedListCreateInputInputObject =
  | Extract<keyof savedListCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'listings', alias?: string  } 
  
export interface ListingCreateManyInput {
  create?: ListingCreateInput[]
  connect?: ListingWhereUniqueInput[]
}
export type ListingCreateManyInputInputObject =
  | Extract<keyof ListingCreateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ListingCreateInput {
  id?: string | null
  title?: string
  description?: string
  maxGuests?: number
  reviews?: ReviewCreateManyWithoutListingInput | null
  vendor?: VendorCreateOneWithoutListingsInput
  pricePerPlate?: number
  views?: ViewsCreateOneWithoutListingInput | null
  bookings?: BookingCreateManyWithoutListingInput | null
  photos?: PictureCreateManyWithoutListingInput | null
}
export type ListingCreateInputInputObject =
  | Extract<keyof ListingCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'maxGuests', alias?: string  } 
  | { name: 'reviews', alias?: string  } 
  | { name: 'vendor', alias?: string  } 
  | { name: 'pricePerPlate', alias?: string  } 
  | { name: 'views', alias?: string  } 
  | { name: 'bookings', alias?: string  } 
  | { name: 'photos', alias?: string  } 
  
export interface VendorCreateOneWithoutListingsInput {
  create?: VendorCreateWithoutListingsInput | null
  connect?: VendorWhereUniqueInput | null
}
export type VendorCreateOneWithoutListingsInputInputObject =
  | Extract<keyof VendorCreateOneWithoutListingsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface VendorCreateWithoutListingsInput {
  id?: string | null
  firstName?: string
  lastName?: string
  email?: string
  password?: string
  phone?: string
  vendorType?: prisma.VENDOR_TYPE | null
}
export type VendorCreateWithoutListingsInputInputObject =
  | Extract<keyof VendorCreateWithoutListingsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'vendorType', alias?: string  } 
  
export interface PictureCreateManyWithoutListingInput {
  create?: PictureCreateWithoutListingInput[]
  connect?: PictureWhereUniqueInput[]
}
export type PictureCreateManyWithoutListingInputInputObject =
  | Extract<keyof PictureCreateManyWithoutListingInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PictureCreateWithoutListingInput {
  id?: string | null
  url?: string
}
export type PictureCreateWithoutListingInputInputObject =
  | Extract<keyof PictureCreateWithoutListingInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface LocationCreateOneInput {
  create?: LocationCreateInput | null
  connect?: LocationWhereUniqueInput | null
}
export type LocationCreateOneInputInputObject =
  | Extract<keyof LocationCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface LocationCreateInput {
  id?: string | null
  lat?: number
  lng?: number
  user?: UserCreateOneWithoutAddressInput | null
  directions?: string
}
export type LocationCreateInputInputObject =
  | Extract<keyof LocationCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'lat', alias?: string  } 
  | { name: 'lng', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'directions', alias?: string  } 
  
export interface UserCreateOneWithoutAddressInput {
  create?: UserCreateWithoutAddressInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutAddressInputInputObject =
  | Extract<keyof UserCreateOneWithoutAddressInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutAddressInput {
  id?: string | null
  email?: string
  firstName?: string
  phone?: string | null
  password?: string
  lastName?: string
  saved?: savedListCreateOneInput | null
  photoUrl?: string | null
}
export type UserCreateWithoutAddressInputInputObject =
  | Extract<keyof UserCreateWithoutAddressInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'saved', alias?: string  } 
  | { name: 'photoUrl', alias?: string  } 
  
export interface PaymentCreateOneWithoutBookingInput {
  create?: PaymentCreateWithoutBookingInput | null
  connect?: PaymentWhereUniqueInput | null
}
export type PaymentCreateOneWithoutBookingInputInputObject =
  | Extract<keyof PaymentCreateOneWithoutBookingInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PaymentCreateWithoutBookingInput {
  id?: string | null
  serviceFee?: number
  price?: number
  totalPrice?: number
  paymentMethod?: PaymentAccountCreateOneWithoutPaymentsInput
}
export type PaymentCreateWithoutBookingInputInputObject =
  | Extract<keyof PaymentCreateWithoutBookingInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'serviceFee', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'totalPrice', alias?: string  } 
  | { name: 'paymentMethod', alias?: string  } 
  
export interface PaymentAccountCreateOneWithoutPaymentsInput {
  create?: PaymentAccountCreateWithoutPaymentsInput | null
  connect?: PaymentAccountWhereUniqueInput | null
}
export type PaymentAccountCreateOneWithoutPaymentsInputInputObject =
  | Extract<keyof PaymentAccountCreateOneWithoutPaymentsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PaymentAccountCreateWithoutPaymentsInput {
  id?: string | null
  type?: prisma.PAYMENT_PROVIDER | null
  user?: UserCreateOneInput
}
export type PaymentAccountCreateWithoutPaymentsInputInputObject =
  | Extract<keyof PaymentAccountCreateWithoutPaymentsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'user', alias?: string  } 
  
export interface VendorUpdateInput {
  firstName?: string | null
  lastName?: string | null
  email?: string | null
  password?: string | null
  phone?: string | null
  listings?: ListingUpdateManyWithoutVendorInput | null
  vendorType?: prisma.VENDOR_TYPE | null
}
export type VendorUpdateInputInputObject =
  | Extract<keyof VendorUpdateInput, string>
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'listings', alias?: string  } 
  | { name: 'vendorType', alias?: string  } 
  
export interface ListingUpdateManyWithoutVendorInput {
  create?: ListingCreateWithoutVendorInput[]
  delete?: ListingWhereUniqueInput[]
  connect?: ListingWhereUniqueInput[]
  set?: ListingWhereUniqueInput[]
  disconnect?: ListingWhereUniqueInput[]
  update?: ListingUpdateWithWhereUniqueWithoutVendorInput[]
  upsert?: ListingUpsertWithWhereUniqueWithoutVendorInput[]
  deleteMany?: ListingScalarWhereInput[]
  updateMany?: ListingUpdateManyWithWhereNestedInput[]
}
export type ListingUpdateManyWithoutVendorInputInputObject =
  | Extract<keyof ListingUpdateManyWithoutVendorInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ListingUpdateWithWhereUniqueWithoutVendorInput {
  where?: ListingWhereUniqueInput
  data?: ListingUpdateWithoutVendorDataInput
}
export type ListingUpdateWithWhereUniqueWithoutVendorInputInputObject =
  | Extract<keyof ListingUpdateWithWhereUniqueWithoutVendorInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ListingUpdateWithoutVendorDataInput {
  title?: string | null
  description?: string | null
  maxGuests?: number | null
  reviews?: ReviewUpdateManyWithoutListingInput | null
  pricePerPlate?: number | null
  views?: ViewsUpdateOneWithoutListingInput | null
  bookings?: BookingUpdateManyWithoutListingInput | null
  photos?: PictureUpdateManyWithoutListingInput | null
}
export type ListingUpdateWithoutVendorDataInputInputObject =
  | Extract<keyof ListingUpdateWithoutVendorDataInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'maxGuests', alias?: string  } 
  | { name: 'reviews', alias?: string  } 
  | { name: 'pricePerPlate', alias?: string  } 
  | { name: 'views', alias?: string  } 
  | { name: 'bookings', alias?: string  } 
  | { name: 'photos', alias?: string  } 
  
export interface ReviewUpdateManyWithoutListingInput {
  create?: ReviewCreateWithoutListingInput[]
  delete?: ReviewWhereUniqueInput[]
  connect?: ReviewWhereUniqueInput[]
  set?: ReviewWhereUniqueInput[]
  disconnect?: ReviewWhereUniqueInput[]
  update?: ReviewUpdateWithWhereUniqueWithoutListingInput[]
  upsert?: ReviewUpsertWithWhereUniqueWithoutListingInput[]
  deleteMany?: ReviewScalarWhereInput[]
  updateMany?: ReviewUpdateManyWithWhereNestedInput[]
}
export type ReviewUpdateManyWithoutListingInputInputObject =
  | Extract<keyof ReviewUpdateManyWithoutListingInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ReviewUpdateWithWhereUniqueWithoutListingInput {
  where?: ReviewWhereUniqueInput
  data?: ReviewUpdateWithoutListingDataInput
}
export type ReviewUpdateWithWhereUniqueWithoutListingInputInputObject =
  | Extract<keyof ReviewUpdateWithWhereUniqueWithoutListingInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ReviewUpdateWithoutListingDataInput {
  title?: string | null
  comment?: string | null
  stars?: number | null
}
export type ReviewUpdateWithoutListingDataInputInputObject =
  | Extract<keyof ReviewUpdateWithoutListingDataInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'comment', alias?: string  } 
  | { name: 'stars', alias?: string  } 
  
export interface ReviewUpsertWithWhereUniqueWithoutListingInput {
  where?: ReviewWhereUniqueInput
  update?: ReviewUpdateWithoutListingDataInput
  create?: ReviewCreateWithoutListingInput
}
export type ReviewUpsertWithWhereUniqueWithoutListingInputInputObject =
  | Extract<keyof ReviewUpsertWithWhereUniqueWithoutListingInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ReviewScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  comment?: string | null
  comment_not?: string | null
  comment_in?: string[]
  comment_not_in?: string[]
  comment_lt?: string | null
  comment_lte?: string | null
  comment_gt?: string | null
  comment_gte?: string | null
  comment_contains?: string | null
  comment_not_contains?: string | null
  comment_starts_with?: string | null
  comment_not_starts_with?: string | null
  comment_ends_with?: string | null
  comment_not_ends_with?: string | null
  stars?: number | null
  stars_not?: number | null
  stars_in?: number[]
  stars_not_in?: number[]
  stars_lt?: number | null
  stars_lte?: number | null
  stars_gt?: number | null
  stars_gte?: number | null
  AND?: ReviewScalarWhereInput[]
  OR?: ReviewScalarWhereInput[]
  NOT?: ReviewScalarWhereInput[]
}
export type ReviewScalarWhereInputInputObject =
  | Extract<keyof ReviewScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_not', alias?: string  } 
  | { name: 'title_in', alias?: string  } 
  | { name: 'title_not_in', alias?: string  } 
  | { name: 'title_lt', alias?: string  } 
  | { name: 'title_lte', alias?: string  } 
  | { name: 'title_gt', alias?: string  } 
  | { name: 'title_gte', alias?: string  } 
  | { name: 'title_contains', alias?: string  } 
  | { name: 'title_not_contains', alias?: string  } 
  | { name: 'title_starts_with', alias?: string  } 
  | { name: 'title_not_starts_with', alias?: string  } 
  | { name: 'title_ends_with', alias?: string  } 
  | { name: 'title_not_ends_with', alias?: string  } 
  | { name: 'comment', alias?: string  } 
  | { name: 'comment_not', alias?: string  } 
  | { name: 'comment_in', alias?: string  } 
  | { name: 'comment_not_in', alias?: string  } 
  | { name: 'comment_lt', alias?: string  } 
  | { name: 'comment_lte', alias?: string  } 
  | { name: 'comment_gt', alias?: string  } 
  | { name: 'comment_gte', alias?: string  } 
  | { name: 'comment_contains', alias?: string  } 
  | { name: 'comment_not_contains', alias?: string  } 
  | { name: 'comment_starts_with', alias?: string  } 
  | { name: 'comment_not_starts_with', alias?: string  } 
  | { name: 'comment_ends_with', alias?: string  } 
  | { name: 'comment_not_ends_with', alias?: string  } 
  | { name: 'stars', alias?: string  } 
  | { name: 'stars_not', alias?: string  } 
  | { name: 'stars_in', alias?: string  } 
  | { name: 'stars_not_in', alias?: string  } 
  | { name: 'stars_lt', alias?: string  } 
  | { name: 'stars_lte', alias?: string  } 
  | { name: 'stars_gt', alias?: string  } 
  | { name: 'stars_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ReviewUpdateManyWithWhereNestedInput {
  where?: ReviewScalarWhereInput
  data?: ReviewUpdateManyDataInput
}
export type ReviewUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof ReviewUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ReviewUpdateManyDataInput {
  title?: string | null
  comment?: string | null
  stars?: number | null
}
export type ReviewUpdateManyDataInputInputObject =
  | Extract<keyof ReviewUpdateManyDataInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'comment', alias?: string  } 
  | { name: 'stars', alias?: string  } 
  
export interface ViewsUpdateOneWithoutListingInput {
  create?: ViewsCreateWithoutListingInput | null
  update?: ViewsUpdateWithoutListingDataInput | null
  upsert?: ViewsUpsertWithoutListingInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: ViewsWhereUniqueInput | null
}
export type ViewsUpdateOneWithoutListingInputInputObject =
  | Extract<keyof ViewsUpdateOneWithoutListingInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ViewsUpdateWithoutListingDataInput {
  lastWeek?: number | null
}
export type ViewsUpdateWithoutListingDataInputInputObject =
  | Extract<keyof ViewsUpdateWithoutListingDataInput, string>
  | { name: 'lastWeek', alias?: string  } 
  
export interface ViewsUpsertWithoutListingInput {
  update?: ViewsUpdateWithoutListingDataInput
  create?: ViewsCreateWithoutListingInput
}
export type ViewsUpsertWithoutListingInputInputObject =
  | Extract<keyof ViewsUpsertWithoutListingInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface BookingUpdateManyWithoutListingInput {
  create?: BookingCreateWithoutListingInput[]
  delete?: BookingWhereUniqueInput[]
  connect?: BookingWhereUniqueInput[]
  set?: BookingWhereUniqueInput[]
  disconnect?: BookingWhereUniqueInput[]
  update?: BookingUpdateWithWhereUniqueWithoutListingInput[]
  upsert?: BookingUpsertWithWhereUniqueWithoutListingInput[]
  deleteMany?: BookingScalarWhereInput[]
  updateMany?: BookingUpdateManyWithWhereNestedInput[]
}
export type BookingUpdateManyWithoutListingInputInputObject =
  | Extract<keyof BookingUpdateManyWithoutListingInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface BookingUpdateWithWhereUniqueWithoutListingInput {
  where?: BookingWhereUniqueInput
  data?: BookingUpdateWithoutListingDataInput
}
export type BookingUpdateWithWhereUniqueWithoutListingInputInputObject =
  | Extract<keyof BookingUpdateWithWhereUniqueWithoutListingInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface BookingUpdateWithoutListingDataInput {
  bookee?: UserUpdateOneRequiredInput | null
  occasionDate?: string | null
  location?: LocationUpdateOneInput | null
  payment?: PaymentUpdateOneWithoutBookingInput | null
  isFulfilled?: boolean | null
}
export type BookingUpdateWithoutListingDataInputInputObject =
  | Extract<keyof BookingUpdateWithoutListingDataInput, string>
  | { name: 'bookee', alias?: string  } 
  | { name: 'occasionDate', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'isFulfilled', alias?: string  } 
  
export interface UserUpdateOneRequiredInput {
  create?: UserCreateInput | null
  update?: UserUpdateDataInput | null
  upsert?: UserUpsertNestedInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneRequiredInputInputObject =
  | Extract<keyof UserUpdateOneRequiredInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateDataInput {
  email?: string | null
  firstName?: string | null
  phone?: string | null
  password?: string | null
  lastName?: string | null
  address?: LocationUpdateOneWithoutUserInput | null
  saved?: savedListUpdateOneInput | null
  photoUrl?: string | null
}
export type UserUpdateDataInputInputObject =
  | Extract<keyof UserUpdateDataInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'saved', alias?: string  } 
  | { name: 'photoUrl', alias?: string  } 
  
export interface LocationUpdateOneWithoutUserInput {
  create?: LocationCreateWithoutUserInput | null
  update?: LocationUpdateWithoutUserDataInput | null
  upsert?: LocationUpsertWithoutUserInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: LocationWhereUniqueInput | null
}
export type LocationUpdateOneWithoutUserInputInputObject =
  | Extract<keyof LocationUpdateOneWithoutUserInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface LocationUpdateWithoutUserDataInput {
  lat?: number | null
  lng?: number | null
  directions?: string | null
}
export type LocationUpdateWithoutUserDataInputInputObject =
  | Extract<keyof LocationUpdateWithoutUserDataInput, string>
  | { name: 'lat', alias?: string  } 
  | { name: 'lng', alias?: string  } 
  | { name: 'directions', alias?: string  } 
  
export interface LocationUpsertWithoutUserInput {
  update?: LocationUpdateWithoutUserDataInput
  create?: LocationCreateWithoutUserInput
}
export type LocationUpsertWithoutUserInputInputObject =
  | Extract<keyof LocationUpsertWithoutUserInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface savedListUpdateOneInput {
  create?: savedListCreateInput | null
  update?: savedListUpdateDataInput | null
  upsert?: savedListUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: savedListWhereUniqueInput | null
}
export type savedListUpdateOneInputInputObject =
  | Extract<keyof savedListUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface savedListUpdateDataInput {
  listings?: ListingUpdateManyInput | null
}
export type savedListUpdateDataInputInputObject =
  | Extract<keyof savedListUpdateDataInput, string>
  | { name: 'listings', alias?: string  } 
  
export interface ListingUpdateManyInput {
  create?: ListingCreateInput[]
  update?: ListingUpdateWithWhereUniqueNestedInput[]
  upsert?: ListingUpsertWithWhereUniqueNestedInput[]
  delete?: ListingWhereUniqueInput[]
  connect?: ListingWhereUniqueInput[]
  set?: ListingWhereUniqueInput[]
  disconnect?: ListingWhereUniqueInput[]
  deleteMany?: ListingScalarWhereInput[]
  updateMany?: ListingUpdateManyWithWhereNestedInput[]
}
export type ListingUpdateManyInputInputObject =
  | Extract<keyof ListingUpdateManyInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ListingUpdateWithWhereUniqueNestedInput {
  where?: ListingWhereUniqueInput
  data?: ListingUpdateDataInput
}
export type ListingUpdateWithWhereUniqueNestedInputInputObject =
  | Extract<keyof ListingUpdateWithWhereUniqueNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ListingUpdateDataInput {
  title?: string | null
  description?: string | null
  maxGuests?: number | null
  reviews?: ReviewUpdateManyWithoutListingInput | null
  vendor?: VendorUpdateOneRequiredWithoutListingsInput | null
  pricePerPlate?: number | null
  views?: ViewsUpdateOneWithoutListingInput | null
  bookings?: BookingUpdateManyWithoutListingInput | null
  photos?: PictureUpdateManyWithoutListingInput | null
}
export type ListingUpdateDataInputInputObject =
  | Extract<keyof ListingUpdateDataInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'maxGuests', alias?: string  } 
  | { name: 'reviews', alias?: string  } 
  | { name: 'vendor', alias?: string  } 
  | { name: 'pricePerPlate', alias?: string  } 
  | { name: 'views', alias?: string  } 
  | { name: 'bookings', alias?: string  } 
  | { name: 'photos', alias?: string  } 
  
export interface VendorUpdateOneRequiredWithoutListingsInput {
  create?: VendorCreateWithoutListingsInput | null
  update?: VendorUpdateWithoutListingsDataInput | null
  upsert?: VendorUpsertWithoutListingsInput | null
  connect?: VendorWhereUniqueInput | null
}
export type VendorUpdateOneRequiredWithoutListingsInputInputObject =
  | Extract<keyof VendorUpdateOneRequiredWithoutListingsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface VendorUpdateWithoutListingsDataInput {
  firstName?: string | null
  lastName?: string | null
  email?: string | null
  password?: string | null
  phone?: string | null
  vendorType?: prisma.VENDOR_TYPE | null
}
export type VendorUpdateWithoutListingsDataInputInputObject =
  | Extract<keyof VendorUpdateWithoutListingsDataInput, string>
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'vendorType', alias?: string  } 
  
export interface VendorUpsertWithoutListingsInput {
  update?: VendorUpdateWithoutListingsDataInput
  create?: VendorCreateWithoutListingsInput
}
export type VendorUpsertWithoutListingsInputInputObject =
  | Extract<keyof VendorUpsertWithoutListingsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PictureUpdateManyWithoutListingInput {
  create?: PictureCreateWithoutListingInput[]
  delete?: PictureWhereUniqueInput[]
  connect?: PictureWhereUniqueInput[]
  set?: PictureWhereUniqueInput[]
  disconnect?: PictureWhereUniqueInput[]
  update?: PictureUpdateWithWhereUniqueWithoutListingInput[]
  upsert?: PictureUpsertWithWhereUniqueWithoutListingInput[]
  deleteMany?: PictureScalarWhereInput[]
  updateMany?: PictureUpdateManyWithWhereNestedInput[]
}
export type PictureUpdateManyWithoutListingInputInputObject =
  | Extract<keyof PictureUpdateManyWithoutListingInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface PictureUpdateWithWhereUniqueWithoutListingInput {
  where?: PictureWhereUniqueInput
  data?: PictureUpdateWithoutListingDataInput
}
export type PictureUpdateWithWhereUniqueWithoutListingInputInputObject =
  | Extract<keyof PictureUpdateWithWhereUniqueWithoutListingInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface PictureUpdateWithoutListingDataInput {
  url?: string | null
}
export type PictureUpdateWithoutListingDataInputInputObject =
  | Extract<keyof PictureUpdateWithoutListingDataInput, string>
  | { name: 'url', alias?: string  } 
  
export interface PictureUpsertWithWhereUniqueWithoutListingInput {
  where?: PictureWhereUniqueInput
  update?: PictureUpdateWithoutListingDataInput
  create?: PictureCreateWithoutListingInput
}
export type PictureUpsertWithWhereUniqueWithoutListingInputInputObject =
  | Extract<keyof PictureUpsertWithWhereUniqueWithoutListingInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PictureScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  AND?: PictureScalarWhereInput[]
  OR?: PictureScalarWhereInput[]
  NOT?: PictureScalarWhereInput[]
}
export type PictureScalarWhereInputInputObject =
  | Extract<keyof PictureScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'url_not', alias?: string  } 
  | { name: 'url_in', alias?: string  } 
  | { name: 'url_not_in', alias?: string  } 
  | { name: 'url_lt', alias?: string  } 
  | { name: 'url_lte', alias?: string  } 
  | { name: 'url_gt', alias?: string  } 
  | { name: 'url_gte', alias?: string  } 
  | { name: 'url_contains', alias?: string  } 
  | { name: 'url_not_contains', alias?: string  } 
  | { name: 'url_starts_with', alias?: string  } 
  | { name: 'url_not_starts_with', alias?: string  } 
  | { name: 'url_ends_with', alias?: string  } 
  | { name: 'url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PictureUpdateManyWithWhereNestedInput {
  where?: PictureScalarWhereInput
  data?: PictureUpdateManyDataInput
}
export type PictureUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof PictureUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface PictureUpdateManyDataInput {
  url?: string | null
}
export type PictureUpdateManyDataInputInputObject =
  | Extract<keyof PictureUpdateManyDataInput, string>
  | { name: 'url', alias?: string  } 
  
export interface ListingUpsertWithWhereUniqueNestedInput {
  where?: ListingWhereUniqueInput
  update?: ListingUpdateDataInput
  create?: ListingCreateInput
}
export type ListingUpsertWithWhereUniqueNestedInputInputObject =
  | Extract<keyof ListingUpsertWithWhereUniqueNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ListingScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  maxGuests?: number | null
  maxGuests_not?: number | null
  maxGuests_in?: number[]
  maxGuests_not_in?: number[]
  maxGuests_lt?: number | null
  maxGuests_lte?: number | null
  maxGuests_gt?: number | null
  maxGuests_gte?: number | null
  pricePerPlate?: number | null
  pricePerPlate_not?: number | null
  pricePerPlate_in?: number[]
  pricePerPlate_not_in?: number[]
  pricePerPlate_lt?: number | null
  pricePerPlate_lte?: number | null
  pricePerPlate_gt?: number | null
  pricePerPlate_gte?: number | null
  AND?: ListingScalarWhereInput[]
  OR?: ListingScalarWhereInput[]
  NOT?: ListingScalarWhereInput[]
}
export type ListingScalarWhereInputInputObject =
  | Extract<keyof ListingScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_not', alias?: string  } 
  | { name: 'title_in', alias?: string  } 
  | { name: 'title_not_in', alias?: string  } 
  | { name: 'title_lt', alias?: string  } 
  | { name: 'title_lte', alias?: string  } 
  | { name: 'title_gt', alias?: string  } 
  | { name: 'title_gte', alias?: string  } 
  | { name: 'title_contains', alias?: string  } 
  | { name: 'title_not_contains', alias?: string  } 
  | { name: 'title_starts_with', alias?: string  } 
  | { name: 'title_not_starts_with', alias?: string  } 
  | { name: 'title_ends_with', alias?: string  } 
  | { name: 'title_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'maxGuests', alias?: string  } 
  | { name: 'maxGuests_not', alias?: string  } 
  | { name: 'maxGuests_in', alias?: string  } 
  | { name: 'maxGuests_not_in', alias?: string  } 
  | { name: 'maxGuests_lt', alias?: string  } 
  | { name: 'maxGuests_lte', alias?: string  } 
  | { name: 'maxGuests_gt', alias?: string  } 
  | { name: 'maxGuests_gte', alias?: string  } 
  | { name: 'pricePerPlate', alias?: string  } 
  | { name: 'pricePerPlate_not', alias?: string  } 
  | { name: 'pricePerPlate_in', alias?: string  } 
  | { name: 'pricePerPlate_not_in', alias?: string  } 
  | { name: 'pricePerPlate_lt', alias?: string  } 
  | { name: 'pricePerPlate_lte', alias?: string  } 
  | { name: 'pricePerPlate_gt', alias?: string  } 
  | { name: 'pricePerPlate_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ListingUpdateManyWithWhereNestedInput {
  where?: ListingScalarWhereInput
  data?: ListingUpdateManyDataInput
}
export type ListingUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof ListingUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ListingUpdateManyDataInput {
  title?: string | null
  description?: string | null
  maxGuests?: number | null
  pricePerPlate?: number | null
}
export type ListingUpdateManyDataInputInputObject =
  | Extract<keyof ListingUpdateManyDataInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'maxGuests', alias?: string  } 
  | { name: 'pricePerPlate', alias?: string  } 
  
export interface savedListUpsertNestedInput {
  update?: savedListUpdateDataInput
  create?: savedListCreateInput
}
export type savedListUpsertNestedInputInputObject =
  | Extract<keyof savedListUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface UserUpsertNestedInput {
  update?: UserUpdateDataInput
  create?: UserCreateInput
}
export type UserUpsertNestedInputInputObject =
  | Extract<keyof UserUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface LocationUpdateOneInput {
  create?: LocationCreateInput | null
  update?: LocationUpdateDataInput | null
  upsert?: LocationUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: LocationWhereUniqueInput | null
}
export type LocationUpdateOneInputInputObject =
  | Extract<keyof LocationUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface LocationUpdateDataInput {
  lat?: number | null
  lng?: number | null
  user?: UserUpdateOneWithoutAddressInput | null
  directions?: string | null
}
export type LocationUpdateDataInputInputObject =
  | Extract<keyof LocationUpdateDataInput, string>
  | { name: 'lat', alias?: string  } 
  | { name: 'lng', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'directions', alias?: string  } 
  
export interface UserUpdateOneWithoutAddressInput {
  create?: UserCreateWithoutAddressInput | null
  update?: UserUpdateWithoutAddressDataInput | null
  upsert?: UserUpsertWithoutAddressInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneWithoutAddressInputInputObject =
  | Extract<keyof UserUpdateOneWithoutAddressInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutAddressDataInput {
  email?: string | null
  firstName?: string | null
  phone?: string | null
  password?: string | null
  lastName?: string | null
  saved?: savedListUpdateOneInput | null
  photoUrl?: string | null
}
export type UserUpdateWithoutAddressDataInputInputObject =
  | Extract<keyof UserUpdateWithoutAddressDataInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'saved', alias?: string  } 
  | { name: 'photoUrl', alias?: string  } 
  
export interface UserUpsertWithoutAddressInput {
  update?: UserUpdateWithoutAddressDataInput
  create?: UserCreateWithoutAddressInput
}
export type UserUpsertWithoutAddressInputInputObject =
  | Extract<keyof UserUpsertWithoutAddressInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface LocationUpsertNestedInput {
  update?: LocationUpdateDataInput
  create?: LocationCreateInput
}
export type LocationUpsertNestedInputInputObject =
  | Extract<keyof LocationUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PaymentUpdateOneWithoutBookingInput {
  create?: PaymentCreateWithoutBookingInput | null
  update?: PaymentUpdateWithoutBookingDataInput | null
  upsert?: PaymentUpsertWithoutBookingInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: PaymentWhereUniqueInput | null
}
export type PaymentUpdateOneWithoutBookingInputInputObject =
  | Extract<keyof PaymentUpdateOneWithoutBookingInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PaymentUpdateWithoutBookingDataInput {
  serviceFee?: number | null
  price?: number | null
  totalPrice?: number | null
  paymentMethod?: PaymentAccountUpdateOneRequiredWithoutPaymentsInput | null
}
export type PaymentUpdateWithoutBookingDataInputInputObject =
  | Extract<keyof PaymentUpdateWithoutBookingDataInput, string>
  | { name: 'serviceFee', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'totalPrice', alias?: string  } 
  | { name: 'paymentMethod', alias?: string  } 
  
export interface PaymentAccountUpdateOneRequiredWithoutPaymentsInput {
  create?: PaymentAccountCreateWithoutPaymentsInput | null
  update?: PaymentAccountUpdateWithoutPaymentsDataInput | null
  upsert?: PaymentAccountUpsertWithoutPaymentsInput | null
  connect?: PaymentAccountWhereUniqueInput | null
}
export type PaymentAccountUpdateOneRequiredWithoutPaymentsInputInputObject =
  | Extract<keyof PaymentAccountUpdateOneRequiredWithoutPaymentsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PaymentAccountUpdateWithoutPaymentsDataInput {
  type?: prisma.PAYMENT_PROVIDER | null
  user?: UserUpdateOneRequiredInput | null
}
export type PaymentAccountUpdateWithoutPaymentsDataInputInputObject =
  | Extract<keyof PaymentAccountUpdateWithoutPaymentsDataInput, string>
  | { name: 'type', alias?: string  } 
  | { name: 'user', alias?: string  } 
  
export interface PaymentAccountUpsertWithoutPaymentsInput {
  update?: PaymentAccountUpdateWithoutPaymentsDataInput
  create?: PaymentAccountCreateWithoutPaymentsInput
}
export type PaymentAccountUpsertWithoutPaymentsInputInputObject =
  | Extract<keyof PaymentAccountUpsertWithoutPaymentsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PaymentUpsertWithoutBookingInput {
  update?: PaymentUpdateWithoutBookingDataInput
  create?: PaymentCreateWithoutBookingInput
}
export type PaymentUpsertWithoutBookingInputInputObject =
  | Extract<keyof PaymentUpsertWithoutBookingInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface BookingUpsertWithWhereUniqueWithoutListingInput {
  where?: BookingWhereUniqueInput
  update?: BookingUpdateWithoutListingDataInput
  create?: BookingCreateWithoutListingInput
}
export type BookingUpsertWithWhereUniqueWithoutListingInputInputObject =
  | Extract<keyof BookingUpsertWithWhereUniqueWithoutListingInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface BookingScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  occasionDate?: string | null
  occasionDate_not?: string | null
  occasionDate_in?: string[]
  occasionDate_not_in?: string[]
  occasionDate_lt?: string | null
  occasionDate_lte?: string | null
  occasionDate_gt?: string | null
  occasionDate_gte?: string | null
  isFulfilled?: boolean | null
  isFulfilled_not?: boolean | null
  AND?: BookingScalarWhereInput[]
  OR?: BookingScalarWhereInput[]
  NOT?: BookingScalarWhereInput[]
}
export type BookingScalarWhereInputInputObject =
  | Extract<keyof BookingScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'occasionDate', alias?: string  } 
  | { name: 'occasionDate_not', alias?: string  } 
  | { name: 'occasionDate_in', alias?: string  } 
  | { name: 'occasionDate_not_in', alias?: string  } 
  | { name: 'occasionDate_lt', alias?: string  } 
  | { name: 'occasionDate_lte', alias?: string  } 
  | { name: 'occasionDate_gt', alias?: string  } 
  | { name: 'occasionDate_gte', alias?: string  } 
  | { name: 'isFulfilled', alias?: string  } 
  | { name: 'isFulfilled_not', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface BookingUpdateManyWithWhereNestedInput {
  where?: BookingScalarWhereInput
  data?: BookingUpdateManyDataInput
}
export type BookingUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof BookingUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface BookingUpdateManyDataInput {
  occasionDate?: string | null
  isFulfilled?: boolean | null
}
export type BookingUpdateManyDataInputInputObject =
  | Extract<keyof BookingUpdateManyDataInput, string>
  | { name: 'occasionDate', alias?: string  } 
  | { name: 'isFulfilled', alias?: string  } 
  
export interface ListingUpsertWithWhereUniqueWithoutVendorInput {
  where?: ListingWhereUniqueInput
  update?: ListingUpdateWithoutVendorDataInput
  create?: ListingCreateWithoutVendorInput
}
export type ListingUpsertWithWhereUniqueWithoutVendorInputInputObject =
  | Extract<keyof ListingUpsertWithWhereUniqueWithoutVendorInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface VendorUpdateManyMutationInput {
  firstName?: string | null
  lastName?: string | null
  email?: string | null
  password?: string | null
  phone?: string | null
  vendorType?: prisma.VENDOR_TYPE | null
}
export type VendorUpdateManyMutationInputInputObject =
  | Extract<keyof VendorUpdateManyMutationInput, string>
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'vendorType', alias?: string  } 
  
export interface UserUpdateInput {
  email?: string | null
  firstName?: string | null
  phone?: string | null
  password?: string | null
  lastName?: string | null
  address?: LocationUpdateOneWithoutUserInput | null
  saved?: savedListUpdateOneInput | null
  photoUrl?: string | null
}
export type UserUpdateInputInputObject =
  | Extract<keyof UserUpdateInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'saved', alias?: string  } 
  | { name: 'photoUrl', alias?: string  } 
  
export interface UserUpdateManyMutationInput {
  email?: string | null
  firstName?: string | null
  phone?: string | null
  password?: string | null
  lastName?: string | null
  photoUrl?: string | null
}
export type UserUpdateManyMutationInputInputObject =
  | Extract<keyof UserUpdateManyMutationInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'photoUrl', alias?: string  } 
  
export interface LocationUpdateInput {
  lat?: number | null
  lng?: number | null
  user?: UserUpdateOneWithoutAddressInput | null
  directions?: string | null
}
export type LocationUpdateInputInputObject =
  | Extract<keyof LocationUpdateInput, string>
  | { name: 'lat', alias?: string  } 
  | { name: 'lng', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'directions', alias?: string  } 
  
export interface LocationUpdateManyMutationInput {
  lat?: number | null
  lng?: number | null
  directions?: string | null
}
export type LocationUpdateManyMutationInputInputObject =
  | Extract<keyof LocationUpdateManyMutationInput, string>
  | { name: 'lat', alias?: string  } 
  | { name: 'lng', alias?: string  } 
  | { name: 'directions', alias?: string  } 
  
export interface ListingUpdateInput {
  title?: string | null
  description?: string | null
  maxGuests?: number | null
  reviews?: ReviewUpdateManyWithoutListingInput | null
  vendor?: VendorUpdateOneRequiredWithoutListingsInput | null
  pricePerPlate?: number | null
  views?: ViewsUpdateOneWithoutListingInput | null
  bookings?: BookingUpdateManyWithoutListingInput | null
  photos?: PictureUpdateManyWithoutListingInput | null
}
export type ListingUpdateInputInputObject =
  | Extract<keyof ListingUpdateInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'maxGuests', alias?: string  } 
  | { name: 'reviews', alias?: string  } 
  | { name: 'vendor', alias?: string  } 
  | { name: 'pricePerPlate', alias?: string  } 
  | { name: 'views', alias?: string  } 
  | { name: 'bookings', alias?: string  } 
  | { name: 'photos', alias?: string  } 
  
export interface ListingUpdateManyMutationInput {
  title?: string | null
  description?: string | null
  maxGuests?: number | null
  pricePerPlate?: number | null
}
export type ListingUpdateManyMutationInputInputObject =
  | Extract<keyof ListingUpdateManyMutationInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'maxGuests', alias?: string  } 
  | { name: 'pricePerPlate', alias?: string  } 
  
export interface PictureCreateInput {
  id?: string | null
  url?: string
  listing?: ListingCreateOneWithoutPhotosInput
}
export type PictureCreateInputInputObject =
  | Extract<keyof PictureCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'listing', alias?: string  } 
  
export interface ListingCreateOneWithoutPhotosInput {
  create?: ListingCreateWithoutPhotosInput | null
  connect?: ListingWhereUniqueInput | null
}
export type ListingCreateOneWithoutPhotosInputInputObject =
  | Extract<keyof ListingCreateOneWithoutPhotosInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ListingCreateWithoutPhotosInput {
  id?: string | null
  title?: string
  description?: string
  maxGuests?: number
  reviews?: ReviewCreateManyWithoutListingInput | null
  vendor?: VendorCreateOneWithoutListingsInput
  pricePerPlate?: number
  views?: ViewsCreateOneWithoutListingInput | null
  bookings?: BookingCreateManyWithoutListingInput | null
}
export type ListingCreateWithoutPhotosInputInputObject =
  | Extract<keyof ListingCreateWithoutPhotosInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'maxGuests', alias?: string  } 
  | { name: 'reviews', alias?: string  } 
  | { name: 'vendor', alias?: string  } 
  | { name: 'pricePerPlate', alias?: string  } 
  | { name: 'views', alias?: string  } 
  | { name: 'bookings', alias?: string  } 
  
export interface PictureUpdateInput {
  url?: string | null
  listing?: ListingUpdateOneRequiredWithoutPhotosInput | null
}
export type PictureUpdateInputInputObject =
  | Extract<keyof PictureUpdateInput, string>
  | { name: 'url', alias?: string  } 
  | { name: 'listing', alias?: string  } 
  
export interface ListingUpdateOneRequiredWithoutPhotosInput {
  create?: ListingCreateWithoutPhotosInput | null
  update?: ListingUpdateWithoutPhotosDataInput | null
  upsert?: ListingUpsertWithoutPhotosInput | null
  connect?: ListingWhereUniqueInput | null
}
export type ListingUpdateOneRequiredWithoutPhotosInputInputObject =
  | Extract<keyof ListingUpdateOneRequiredWithoutPhotosInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ListingUpdateWithoutPhotosDataInput {
  title?: string | null
  description?: string | null
  maxGuests?: number | null
  reviews?: ReviewUpdateManyWithoutListingInput | null
  vendor?: VendorUpdateOneRequiredWithoutListingsInput | null
  pricePerPlate?: number | null
  views?: ViewsUpdateOneWithoutListingInput | null
  bookings?: BookingUpdateManyWithoutListingInput | null
}
export type ListingUpdateWithoutPhotosDataInputInputObject =
  | Extract<keyof ListingUpdateWithoutPhotosDataInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'maxGuests', alias?: string  } 
  | { name: 'reviews', alias?: string  } 
  | { name: 'vendor', alias?: string  } 
  | { name: 'pricePerPlate', alias?: string  } 
  | { name: 'views', alias?: string  } 
  | { name: 'bookings', alias?: string  } 
  
export interface ListingUpsertWithoutPhotosInput {
  update?: ListingUpdateWithoutPhotosDataInput
  create?: ListingCreateWithoutPhotosInput
}
export type ListingUpsertWithoutPhotosInputInputObject =
  | Extract<keyof ListingUpsertWithoutPhotosInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PictureUpdateManyMutationInput {
  url?: string | null
}
export type PictureUpdateManyMutationInputInputObject =
  | Extract<keyof PictureUpdateManyMutationInput, string>
  | { name: 'url', alias?: string  } 
  
export interface ViewsCreateInput {
  id?: string | null
  lastWeek?: number
  listing?: ListingCreateOneWithoutViewsInput
}
export type ViewsCreateInputInputObject =
  | Extract<keyof ViewsCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'lastWeek', alias?: string  } 
  | { name: 'listing', alias?: string  } 
  
export interface ListingCreateOneWithoutViewsInput {
  create?: ListingCreateWithoutViewsInput | null
  connect?: ListingWhereUniqueInput | null
}
export type ListingCreateOneWithoutViewsInputInputObject =
  | Extract<keyof ListingCreateOneWithoutViewsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ListingCreateWithoutViewsInput {
  id?: string | null
  title?: string
  description?: string
  maxGuests?: number
  reviews?: ReviewCreateManyWithoutListingInput | null
  vendor?: VendorCreateOneWithoutListingsInput
  pricePerPlate?: number
  bookings?: BookingCreateManyWithoutListingInput | null
  photos?: PictureCreateManyWithoutListingInput | null
}
export type ListingCreateWithoutViewsInputInputObject =
  | Extract<keyof ListingCreateWithoutViewsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'maxGuests', alias?: string  } 
  | { name: 'reviews', alias?: string  } 
  | { name: 'vendor', alias?: string  } 
  | { name: 'pricePerPlate', alias?: string  } 
  | { name: 'bookings', alias?: string  } 
  | { name: 'photos', alias?: string  } 
  
export interface ViewsUpdateInput {
  lastWeek?: number | null
  listing?: ListingUpdateOneRequiredWithoutViewsInput | null
}
export type ViewsUpdateInputInputObject =
  | Extract<keyof ViewsUpdateInput, string>
  | { name: 'lastWeek', alias?: string  } 
  | { name: 'listing', alias?: string  } 
  
export interface ListingUpdateOneRequiredWithoutViewsInput {
  create?: ListingCreateWithoutViewsInput | null
  update?: ListingUpdateWithoutViewsDataInput | null
  upsert?: ListingUpsertWithoutViewsInput | null
  connect?: ListingWhereUniqueInput | null
}
export type ListingUpdateOneRequiredWithoutViewsInputInputObject =
  | Extract<keyof ListingUpdateOneRequiredWithoutViewsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ListingUpdateWithoutViewsDataInput {
  title?: string | null
  description?: string | null
  maxGuests?: number | null
  reviews?: ReviewUpdateManyWithoutListingInput | null
  vendor?: VendorUpdateOneRequiredWithoutListingsInput | null
  pricePerPlate?: number | null
  bookings?: BookingUpdateManyWithoutListingInput | null
  photos?: PictureUpdateManyWithoutListingInput | null
}
export type ListingUpdateWithoutViewsDataInputInputObject =
  | Extract<keyof ListingUpdateWithoutViewsDataInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'maxGuests', alias?: string  } 
  | { name: 'reviews', alias?: string  } 
  | { name: 'vendor', alias?: string  } 
  | { name: 'pricePerPlate', alias?: string  } 
  | { name: 'bookings', alias?: string  } 
  | { name: 'photos', alias?: string  } 
  
export interface ListingUpsertWithoutViewsInput {
  update?: ListingUpdateWithoutViewsDataInput
  create?: ListingCreateWithoutViewsInput
}
export type ListingUpsertWithoutViewsInputInputObject =
  | Extract<keyof ListingUpsertWithoutViewsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ViewsUpdateManyMutationInput {
  lastWeek?: number | null
}
export type ViewsUpdateManyMutationInputInputObject =
  | Extract<keyof ViewsUpdateManyMutationInput, string>
  | { name: 'lastWeek', alias?: string  } 
  
export interface ReviewCreateInput {
  id?: string | null
  title?: string
  comment?: string
  stars?: number
  listing?: ListingCreateOneWithoutReviewsInput
}
export type ReviewCreateInputInputObject =
  | Extract<keyof ReviewCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'comment', alias?: string  } 
  | { name: 'stars', alias?: string  } 
  | { name: 'listing', alias?: string  } 
  
export interface ListingCreateOneWithoutReviewsInput {
  create?: ListingCreateWithoutReviewsInput | null
  connect?: ListingWhereUniqueInput | null
}
export type ListingCreateOneWithoutReviewsInputInputObject =
  | Extract<keyof ListingCreateOneWithoutReviewsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ListingCreateWithoutReviewsInput {
  id?: string | null
  title?: string
  description?: string
  maxGuests?: number
  vendor?: VendorCreateOneWithoutListingsInput
  pricePerPlate?: number
  views?: ViewsCreateOneWithoutListingInput | null
  bookings?: BookingCreateManyWithoutListingInput | null
  photos?: PictureCreateManyWithoutListingInput | null
}
export type ListingCreateWithoutReviewsInputInputObject =
  | Extract<keyof ListingCreateWithoutReviewsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'maxGuests', alias?: string  } 
  | { name: 'vendor', alias?: string  } 
  | { name: 'pricePerPlate', alias?: string  } 
  | { name: 'views', alias?: string  } 
  | { name: 'bookings', alias?: string  } 
  | { name: 'photos', alias?: string  } 
  
export interface ReviewUpdateInput {
  title?: string | null
  comment?: string | null
  stars?: number | null
  listing?: ListingUpdateOneRequiredWithoutReviewsInput | null
}
export type ReviewUpdateInputInputObject =
  | Extract<keyof ReviewUpdateInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'comment', alias?: string  } 
  | { name: 'stars', alias?: string  } 
  | { name: 'listing', alias?: string  } 
  
export interface ListingUpdateOneRequiredWithoutReviewsInput {
  create?: ListingCreateWithoutReviewsInput | null
  update?: ListingUpdateWithoutReviewsDataInput | null
  upsert?: ListingUpsertWithoutReviewsInput | null
  connect?: ListingWhereUniqueInput | null
}
export type ListingUpdateOneRequiredWithoutReviewsInputInputObject =
  | Extract<keyof ListingUpdateOneRequiredWithoutReviewsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ListingUpdateWithoutReviewsDataInput {
  title?: string | null
  description?: string | null
  maxGuests?: number | null
  vendor?: VendorUpdateOneRequiredWithoutListingsInput | null
  pricePerPlate?: number | null
  views?: ViewsUpdateOneWithoutListingInput | null
  bookings?: BookingUpdateManyWithoutListingInput | null
  photos?: PictureUpdateManyWithoutListingInput | null
}
export type ListingUpdateWithoutReviewsDataInputInputObject =
  | Extract<keyof ListingUpdateWithoutReviewsDataInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'maxGuests', alias?: string  } 
  | { name: 'vendor', alias?: string  } 
  | { name: 'pricePerPlate', alias?: string  } 
  | { name: 'views', alias?: string  } 
  | { name: 'bookings', alias?: string  } 
  | { name: 'photos', alias?: string  } 
  
export interface ListingUpsertWithoutReviewsInput {
  update?: ListingUpdateWithoutReviewsDataInput
  create?: ListingCreateWithoutReviewsInput
}
export type ListingUpsertWithoutReviewsInputInputObject =
  | Extract<keyof ListingUpsertWithoutReviewsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ReviewUpdateManyMutationInput {
  title?: string | null
  comment?: string | null
  stars?: number | null
}
export type ReviewUpdateManyMutationInputInputObject =
  | Extract<keyof ReviewUpdateManyMutationInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'comment', alias?: string  } 
  | { name: 'stars', alias?: string  } 
  
export interface BookingCreateInput {
  id?: string | null
  bookee?: UserCreateOneInput
  listing?: ListingCreateOneWithoutBookingsInput
  occasionDate?: string
  location?: LocationCreateOneInput | null
  payment?: PaymentCreateOneWithoutBookingInput | null
  isFulfilled?: boolean | null
}
export type BookingCreateInputInputObject =
  | Extract<keyof BookingCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'bookee', alias?: string  } 
  | { name: 'listing', alias?: string  } 
  | { name: 'occasionDate', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'isFulfilled', alias?: string  } 
  
export interface ListingCreateOneWithoutBookingsInput {
  create?: ListingCreateWithoutBookingsInput | null
  connect?: ListingWhereUniqueInput | null
}
export type ListingCreateOneWithoutBookingsInputInputObject =
  | Extract<keyof ListingCreateOneWithoutBookingsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ListingCreateWithoutBookingsInput {
  id?: string | null
  title?: string
  description?: string
  maxGuests?: number
  reviews?: ReviewCreateManyWithoutListingInput | null
  vendor?: VendorCreateOneWithoutListingsInput
  pricePerPlate?: number
  views?: ViewsCreateOneWithoutListingInput | null
  photos?: PictureCreateManyWithoutListingInput | null
}
export type ListingCreateWithoutBookingsInputInputObject =
  | Extract<keyof ListingCreateWithoutBookingsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'maxGuests', alias?: string  } 
  | { name: 'reviews', alias?: string  } 
  | { name: 'vendor', alias?: string  } 
  | { name: 'pricePerPlate', alias?: string  } 
  | { name: 'views', alias?: string  } 
  | { name: 'photos', alias?: string  } 
  
export interface BookingUpdateInput {
  bookee?: UserUpdateOneRequiredInput | null
  listing?: ListingUpdateOneRequiredWithoutBookingsInput | null
  occasionDate?: string | null
  location?: LocationUpdateOneInput | null
  payment?: PaymentUpdateOneWithoutBookingInput | null
  isFulfilled?: boolean | null
}
export type BookingUpdateInputInputObject =
  | Extract<keyof BookingUpdateInput, string>
  | { name: 'bookee', alias?: string  } 
  | { name: 'listing', alias?: string  } 
  | { name: 'occasionDate', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'isFulfilled', alias?: string  } 
  
export interface ListingUpdateOneRequiredWithoutBookingsInput {
  create?: ListingCreateWithoutBookingsInput | null
  update?: ListingUpdateWithoutBookingsDataInput | null
  upsert?: ListingUpsertWithoutBookingsInput | null
  connect?: ListingWhereUniqueInput | null
}
export type ListingUpdateOneRequiredWithoutBookingsInputInputObject =
  | Extract<keyof ListingUpdateOneRequiredWithoutBookingsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ListingUpdateWithoutBookingsDataInput {
  title?: string | null
  description?: string | null
  maxGuests?: number | null
  reviews?: ReviewUpdateManyWithoutListingInput | null
  vendor?: VendorUpdateOneRequiredWithoutListingsInput | null
  pricePerPlate?: number | null
  views?: ViewsUpdateOneWithoutListingInput | null
  photos?: PictureUpdateManyWithoutListingInput | null
}
export type ListingUpdateWithoutBookingsDataInputInputObject =
  | Extract<keyof ListingUpdateWithoutBookingsDataInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'maxGuests', alias?: string  } 
  | { name: 'reviews', alias?: string  } 
  | { name: 'vendor', alias?: string  } 
  | { name: 'pricePerPlate', alias?: string  } 
  | { name: 'views', alias?: string  } 
  | { name: 'photos', alias?: string  } 
  
export interface ListingUpsertWithoutBookingsInput {
  update?: ListingUpdateWithoutBookingsDataInput
  create?: ListingCreateWithoutBookingsInput
}
export type ListingUpsertWithoutBookingsInputInputObject =
  | Extract<keyof ListingUpsertWithoutBookingsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface BookingUpdateManyMutationInput {
  occasionDate?: string | null
  isFulfilled?: boolean | null
}
export type BookingUpdateManyMutationInputInputObject =
  | Extract<keyof BookingUpdateManyMutationInput, string>
  | { name: 'occasionDate', alias?: string  } 
  | { name: 'isFulfilled', alias?: string  } 
  
export interface PaymentCreateInput {
  id?: string | null
  serviceFee?: number
  price?: number
  totalPrice?: number
  booking?: BookingCreateOneWithoutPaymentInput
  paymentMethod?: PaymentAccountCreateOneWithoutPaymentsInput
}
export type PaymentCreateInputInputObject =
  | Extract<keyof PaymentCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'serviceFee', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'totalPrice', alias?: string  } 
  | { name: 'booking', alias?: string  } 
  | { name: 'paymentMethod', alias?: string  } 
  
export interface BookingCreateOneWithoutPaymentInput {
  create?: BookingCreateWithoutPaymentInput | null
  connect?: BookingWhereUniqueInput | null
}
export type BookingCreateOneWithoutPaymentInputInputObject =
  | Extract<keyof BookingCreateOneWithoutPaymentInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BookingCreateWithoutPaymentInput {
  id?: string | null
  bookee?: UserCreateOneInput
  listing?: ListingCreateOneWithoutBookingsInput
  occasionDate?: string
  location?: LocationCreateOneInput | null
  isFulfilled?: boolean | null
}
export type BookingCreateWithoutPaymentInputInputObject =
  | Extract<keyof BookingCreateWithoutPaymentInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'bookee', alias?: string  } 
  | { name: 'listing', alias?: string  } 
  | { name: 'occasionDate', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'isFulfilled', alias?: string  } 
  
export interface PaymentUpdateInput {
  serviceFee?: number | null
  price?: number | null
  totalPrice?: number | null
  booking?: BookingUpdateOneRequiredWithoutPaymentInput | null
  paymentMethod?: PaymentAccountUpdateOneRequiredWithoutPaymentsInput | null
}
export type PaymentUpdateInputInputObject =
  | Extract<keyof PaymentUpdateInput, string>
  | { name: 'serviceFee', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'totalPrice', alias?: string  } 
  | { name: 'booking', alias?: string  } 
  | { name: 'paymentMethod', alias?: string  } 
  
export interface BookingUpdateOneRequiredWithoutPaymentInput {
  create?: BookingCreateWithoutPaymentInput | null
  update?: BookingUpdateWithoutPaymentDataInput | null
  upsert?: BookingUpsertWithoutPaymentInput | null
  connect?: BookingWhereUniqueInput | null
}
export type BookingUpdateOneRequiredWithoutPaymentInputInputObject =
  | Extract<keyof BookingUpdateOneRequiredWithoutPaymentInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BookingUpdateWithoutPaymentDataInput {
  bookee?: UserUpdateOneRequiredInput | null
  listing?: ListingUpdateOneRequiredWithoutBookingsInput | null
  occasionDate?: string | null
  location?: LocationUpdateOneInput | null
  isFulfilled?: boolean | null
}
export type BookingUpdateWithoutPaymentDataInputInputObject =
  | Extract<keyof BookingUpdateWithoutPaymentDataInput, string>
  | { name: 'bookee', alias?: string  } 
  | { name: 'listing', alias?: string  } 
  | { name: 'occasionDate', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'isFulfilled', alias?: string  } 
  
export interface BookingUpsertWithoutPaymentInput {
  update?: BookingUpdateWithoutPaymentDataInput
  create?: BookingCreateWithoutPaymentInput
}
export type BookingUpsertWithoutPaymentInputInputObject =
  | Extract<keyof BookingUpsertWithoutPaymentInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PaymentUpdateManyMutationInput {
  serviceFee?: number | null
  price?: number | null
  totalPrice?: number | null
}
export type PaymentUpdateManyMutationInputInputObject =
  | Extract<keyof PaymentUpdateManyMutationInput, string>
  | { name: 'serviceFee', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'totalPrice', alias?: string  } 
  
export interface PaymentAccountCreateInput {
  id?: string | null
  type?: prisma.PAYMENT_PROVIDER | null
  user?: UserCreateOneInput
  payments?: PaymentCreateManyWithoutPaymentMethodInput | null
}
export type PaymentAccountCreateInputInputObject =
  | Extract<keyof PaymentAccountCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'payments', alias?: string  } 
  
export interface PaymentCreateManyWithoutPaymentMethodInput {
  create?: PaymentCreateWithoutPaymentMethodInput[]
  connect?: PaymentWhereUniqueInput[]
}
export type PaymentCreateManyWithoutPaymentMethodInputInputObject =
  | Extract<keyof PaymentCreateManyWithoutPaymentMethodInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PaymentCreateWithoutPaymentMethodInput {
  id?: string | null
  serviceFee?: number
  price?: number
  totalPrice?: number
  booking?: BookingCreateOneWithoutPaymentInput
}
export type PaymentCreateWithoutPaymentMethodInputInputObject =
  | Extract<keyof PaymentCreateWithoutPaymentMethodInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'serviceFee', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'totalPrice', alias?: string  } 
  | { name: 'booking', alias?: string  } 
  
export interface PaymentAccountUpdateInput {
  type?: prisma.PAYMENT_PROVIDER | null
  user?: UserUpdateOneRequiredInput | null
  payments?: PaymentUpdateManyWithoutPaymentMethodInput | null
}
export type PaymentAccountUpdateInputInputObject =
  | Extract<keyof PaymentAccountUpdateInput, string>
  | { name: 'type', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'payments', alias?: string  } 
  
export interface PaymentUpdateManyWithoutPaymentMethodInput {
  create?: PaymentCreateWithoutPaymentMethodInput[]
  delete?: PaymentWhereUniqueInput[]
  connect?: PaymentWhereUniqueInput[]
  set?: PaymentWhereUniqueInput[]
  disconnect?: PaymentWhereUniqueInput[]
  update?: PaymentUpdateWithWhereUniqueWithoutPaymentMethodInput[]
  upsert?: PaymentUpsertWithWhereUniqueWithoutPaymentMethodInput[]
  deleteMany?: PaymentScalarWhereInput[]
  updateMany?: PaymentUpdateManyWithWhereNestedInput[]
}
export type PaymentUpdateManyWithoutPaymentMethodInputInputObject =
  | Extract<keyof PaymentUpdateManyWithoutPaymentMethodInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface PaymentUpdateWithWhereUniqueWithoutPaymentMethodInput {
  where?: PaymentWhereUniqueInput
  data?: PaymentUpdateWithoutPaymentMethodDataInput
}
export type PaymentUpdateWithWhereUniqueWithoutPaymentMethodInputInputObject =
  | Extract<keyof PaymentUpdateWithWhereUniqueWithoutPaymentMethodInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface PaymentUpdateWithoutPaymentMethodDataInput {
  serviceFee?: number | null
  price?: number | null
  totalPrice?: number | null
  booking?: BookingUpdateOneRequiredWithoutPaymentInput | null
}
export type PaymentUpdateWithoutPaymentMethodDataInputInputObject =
  | Extract<keyof PaymentUpdateWithoutPaymentMethodDataInput, string>
  | { name: 'serviceFee', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'totalPrice', alias?: string  } 
  | { name: 'booking', alias?: string  } 
  
export interface PaymentUpsertWithWhereUniqueWithoutPaymentMethodInput {
  where?: PaymentWhereUniqueInput
  update?: PaymentUpdateWithoutPaymentMethodDataInput
  create?: PaymentCreateWithoutPaymentMethodInput
}
export type PaymentUpsertWithWhereUniqueWithoutPaymentMethodInputInputObject =
  | Extract<keyof PaymentUpsertWithWhereUniqueWithoutPaymentMethodInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PaymentScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  serviceFee?: number | null
  serviceFee_not?: number | null
  serviceFee_in?: number[]
  serviceFee_not_in?: number[]
  serviceFee_lt?: number | null
  serviceFee_lte?: number | null
  serviceFee_gt?: number | null
  serviceFee_gte?: number | null
  price?: number | null
  price_not?: number | null
  price_in?: number[]
  price_not_in?: number[]
  price_lt?: number | null
  price_lte?: number | null
  price_gt?: number | null
  price_gte?: number | null
  totalPrice?: number | null
  totalPrice_not?: number | null
  totalPrice_in?: number[]
  totalPrice_not_in?: number[]
  totalPrice_lt?: number | null
  totalPrice_lte?: number | null
  totalPrice_gt?: number | null
  totalPrice_gte?: number | null
  AND?: PaymentScalarWhereInput[]
  OR?: PaymentScalarWhereInput[]
  NOT?: PaymentScalarWhereInput[]
}
export type PaymentScalarWhereInputInputObject =
  | Extract<keyof PaymentScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'serviceFee', alias?: string  } 
  | { name: 'serviceFee_not', alias?: string  } 
  | { name: 'serviceFee_in', alias?: string  } 
  | { name: 'serviceFee_not_in', alias?: string  } 
  | { name: 'serviceFee_lt', alias?: string  } 
  | { name: 'serviceFee_lte', alias?: string  } 
  | { name: 'serviceFee_gt', alias?: string  } 
  | { name: 'serviceFee_gte', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'price_not', alias?: string  } 
  | { name: 'price_in', alias?: string  } 
  | { name: 'price_not_in', alias?: string  } 
  | { name: 'price_lt', alias?: string  } 
  | { name: 'price_lte', alias?: string  } 
  | { name: 'price_gt', alias?: string  } 
  | { name: 'price_gte', alias?: string  } 
  | { name: 'totalPrice', alias?: string  } 
  | { name: 'totalPrice_not', alias?: string  } 
  | { name: 'totalPrice_in', alias?: string  } 
  | { name: 'totalPrice_not_in', alias?: string  } 
  | { name: 'totalPrice_lt', alias?: string  } 
  | { name: 'totalPrice_lte', alias?: string  } 
  | { name: 'totalPrice_gt', alias?: string  } 
  | { name: 'totalPrice_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PaymentUpdateManyWithWhereNestedInput {
  where?: PaymentScalarWhereInput
  data?: PaymentUpdateManyDataInput
}
export type PaymentUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof PaymentUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface PaymentUpdateManyDataInput {
  serviceFee?: number | null
  price?: number | null
  totalPrice?: number | null
}
export type PaymentUpdateManyDataInputInputObject =
  | Extract<keyof PaymentUpdateManyDataInput, string>
  | { name: 'serviceFee', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'totalPrice', alias?: string  } 
  
export interface PaymentAccountUpdateManyMutationInput {
  type?: prisma.PAYMENT_PROVIDER | null
}
export type PaymentAccountUpdateManyMutationInputInputObject =
  | Extract<keyof PaymentAccountUpdateManyMutationInput, string>
  | { name: 'type', alias?: string  } 
  
export interface savedListUpdateInput {
  listings?: ListingUpdateManyInput | null
}
export type savedListUpdateInputInputObject =
  | Extract<keyof savedListUpdateInput, string>
  | { name: 'listings', alias?: string  } 
  
export interface VendorSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: VendorWhereInput | null
  AND?: VendorSubscriptionWhereInput[]
  OR?: VendorSubscriptionWhereInput[]
  NOT?: VendorSubscriptionWhereInput[]
}
export type VendorSubscriptionWhereInputInputObject =
  | Extract<keyof VendorSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: UserWhereInput | null
  AND?: UserSubscriptionWhereInput[]
  OR?: UserSubscriptionWhereInput[]
  NOT?: UserSubscriptionWhereInput[]
}
export type UserSubscriptionWhereInputInputObject =
  | Extract<keyof UserSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface LocationSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: LocationWhereInput | null
  AND?: LocationSubscriptionWhereInput[]
  OR?: LocationSubscriptionWhereInput[]
  NOT?: LocationSubscriptionWhereInput[]
}
export type LocationSubscriptionWhereInputInputObject =
  | Extract<keyof LocationSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ListingSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ListingWhereInput | null
  AND?: ListingSubscriptionWhereInput[]
  OR?: ListingSubscriptionWhereInput[]
  NOT?: ListingSubscriptionWhereInput[]
}
export type ListingSubscriptionWhereInputInputObject =
  | Extract<keyof ListingSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PictureSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: PictureWhereInput | null
  AND?: PictureSubscriptionWhereInput[]
  OR?: PictureSubscriptionWhereInput[]
  NOT?: PictureSubscriptionWhereInput[]
}
export type PictureSubscriptionWhereInputInputObject =
  | Extract<keyof PictureSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ViewsSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ViewsWhereInput | null
  AND?: ViewsSubscriptionWhereInput[]
  OR?: ViewsSubscriptionWhereInput[]
  NOT?: ViewsSubscriptionWhereInput[]
}
export type ViewsSubscriptionWhereInputInputObject =
  | Extract<keyof ViewsSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ReviewSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ReviewWhereInput | null
  AND?: ReviewSubscriptionWhereInput[]
  OR?: ReviewSubscriptionWhereInput[]
  NOT?: ReviewSubscriptionWhereInput[]
}
export type ReviewSubscriptionWhereInputInputObject =
  | Extract<keyof ReviewSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface BookingSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: BookingWhereInput | null
  AND?: BookingSubscriptionWhereInput[]
  OR?: BookingSubscriptionWhereInput[]
  NOT?: BookingSubscriptionWhereInput[]
}
export type BookingSubscriptionWhereInputInputObject =
  | Extract<keyof BookingSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PaymentSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: PaymentWhereInput | null
  AND?: PaymentSubscriptionWhereInput[]
  OR?: PaymentSubscriptionWhereInput[]
  NOT?: PaymentSubscriptionWhereInput[]
}
export type PaymentSubscriptionWhereInputInputObject =
  | Extract<keyof PaymentSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PaymentAccountSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: PaymentAccountWhereInput | null
  AND?: PaymentAccountSubscriptionWhereInput[]
  OR?: PaymentAccountSubscriptionWhereInput[]
  NOT?: PaymentAccountSubscriptionWhereInput[]
}
export type PaymentAccountSubscriptionWhereInputInputObject =
  | Extract<keyof PaymentAccountSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface savedListSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: savedListWhereInput | null
  AND?: savedListSubscriptionWhereInput[]
  OR?: savedListSubscriptionWhereInput[]
  NOT?: savedListSubscriptionWhereInput[]
}
export type savedListSubscriptionWhereInputInputObject =
  | Extract<keyof savedListSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  

export type VENDOR_TYPEValues =
  | 'RESTAURANT'
  | 'INDEPENDENT'
  | 'BARS'
  
export type PAYMENT_PROVIDERValues =
  | 'MPESA'
  | 'CREDIT_CARD'
  
export type ListingOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'title_ASC'
  | 'title_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'maxGuests_ASC'
  | 'maxGuests_DESC'
  | 'pricePerPlate_ASC'
  | 'pricePerPlate_DESC'
  
export type ReviewOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'title_ASC'
  | 'title_DESC'
  | 'comment_ASC'
  | 'comment_DESC'
  | 'stars_ASC'
  | 'stars_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type BookingOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'occasionDate_ASC'
  | 'occasionDate_DESC'
  | 'isFulfilled_ASC'
  | 'isFulfilled_DESC'
  
export type PaymentOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'serviceFee_ASC'
  | 'serviceFee_DESC'
  | 'price_ASC'
  | 'price_DESC'
  | 'totalPrice_ASC'
  | 'totalPrice_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type PictureOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'url_ASC'
  | 'url_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type VendorOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'firstName_ASC'
  | 'firstName_DESC'
  | 'lastName_ASC'
  | 'lastName_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'password_ASC'
  | 'password_DESC'
  | 'phone_ASC'
  | 'phone_DESC'
  | 'vendorType_ASC'
  | 'vendorType_DESC'
  
export type UserOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'firstName_ASC'
  | 'firstName_DESC'
  | 'phone_ASC'
  | 'phone_DESC'
  | 'password_ASC'
  | 'password_DESC'
  | 'lastName_ASC'
  | 'lastName_DESC'
  | 'photoUrl_ASC'
  | 'photoUrl_DESC'
  
export type LocationOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'lat_ASC'
  | 'lat_DESC'
  | 'lng_ASC'
  | 'lng_DESC'
  | 'directions_ASC'
  | 'directions_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type ViewsOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'lastWeek_ASC'
  | 'lastWeek_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type PaymentAccountOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'type_ASC'
  | 'type_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type savedListOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MutationTypeValues =
  | 'CREATED'
  | 'UPDATED'
  | 'DELETED'
  
  